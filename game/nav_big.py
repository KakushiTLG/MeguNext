
@bot.callback_query_handler(func=lambda call: call.data.startswith('startstartBigCity'))
def startstartCity(call):
    user = db.Users.get(user_id=call.from_user.id)
    item = db.Inventory(name='–ë–æ–ª—å—à–æ–π –≥–æ—Ä–æ–¥', type='–ë–æ–ª—å—à–æ–π –≥–æ—Ä–æ–¥', size=0, bonus=0, active=0, idplayer=user.id)
    item.save()
    text = '–ü–æ–ø–∏–Ω–∞–≤ –∑–¥–µ—à–Ω–µ–≥–æ —Å–ø—è—â–µ–≥–æ –±–æ–º–∂–∞, —Ç—ã —É–±–µ–¥–∏–ª—Å—è –≤ —Ç–æ–º —á—Ç–æ —ç—Ç–æ—Ç –≥–æ—Ä–æ–¥ ‚Äî –Ω–µ –≥–ª—é–∫. –í–æ–Ω—å –æ—Ç –±–æ–º–∂–∞, –∫—Å—Ç–∞—Ç–∏, —Ç–æ–∂–µ –≤–ø–æ–ª–Ω–µ —Ä–µ–∞–ª—å–Ω–∞—è'
    gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id)
    chat = call.message.chat.id
    startBigCity(chat)

def startBigCity(chat):
    text = "‚Äì__–ß—ë –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç... –¢—ã –∫–∞–∫–æ–≥–æ —Ö–µ—Ä–∞ —Ç–≤–æ—Ä–∏—à—å?! –ê–∞, –≤–∏–¥–∞—Ç—å –±—É–¥–∏–ª –º–µ–Ω—è, —á—Ç–æ–±—ã –≤—ã–ø–∏–≤–∫–æ–π —É–≥–æ—Å—Ç–∏—Ç—å, –Ω—É –∫–æ–Ω–µ—á–Ω–æ –∂–µ! –ù–µ —Å—Ç–µ—Å–Ω—è–π—Å—è, –ø–æ–π–¥—ë–º, —è –∑–Ω–∞—é –æ—Ç–ª–∏—á–Ω—ã–π –±–∞—Ä –∑–¥–µ—Å—å —Ä—è–¥–æ–º.\n\n–°–∫–∞–∂—É –ø–æ —Å–µ–∫—Ä–µ—Ç—É ‚Äî –æ–Ω –∑–¥–µ—Å—å –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π, —Ç–∞–∫ —á—Ç–æ –≤—ã–±–∏—Ä–∞—Ç—å –Ω–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è.__\n\n–û–Ω, –æ–±–Ω—è–≤ —Ç–µ–±—è –æ–¥–Ω–æ–π —Ä—É–∫–æ–π, –ø–æ—Ç–∞—â–∏–ª –≤ –∏–∑–≤–µ—Å—Ç–Ω–æ–º –µ–º—É –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏..."
    photo = open('/home/kakushigoto/megu/media/bomj.jpg', 'rb')
    bot.send_photo(chat, photo, caption=text, parse_mode='markdown')
    markup = InlineKeyboardMarkup()
    markup.row_width = 2
    markup.add(InlineKeyboardButton('–ì–¥–µ –º—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è?', callback_data="startBigCity_1"))
    bot.send_message(chat, "–ß—ë—Ç –Ω–µ–∑–Ω–∞–∫–æ–º–∞ –º–Ω–µ —Ç–≤–æ—è —Ñ–∏–∑–∏–æ–Ω–æ–º–∏—è, –¥–∞ –∏ –ø–∏–Ω–∞–µ—à—å —Ç—ã —Å–ª–∞–±–æ–≤–∞—Ç–æ –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –º–µ—Å—Ç–Ω—ã–º–∏. –ù–∞–¥–æ –¥—É–º–∞—Ç—å, —Ç—ã —Å —Ç–æ–π –±–µ–∑—ã–º—è–Ω–Ω–æ–π –¥–µ—Ä–µ–≤–Ω–∏, –≤–∏—Å—è—â–µ–π –Ω–∞ —Å–æ–ø–ª—è—Ö, –∫–æ—Ç–æ—Ä—É—é –ø–æ—á–µ–º—É-—Ç–æ –≤—Å–µ –µ—â—ë –Ω–∞–∑—ã–≤–∞—é—Ç –≥–æ—Ä–æ–¥–æ–º. –ù–∞–≤–µ—Ä–Ω–æ–µ, –≤ –ø–∞–º—è—Ç—å –æ –±—ã–ª—ã—Ö –≤—Ä–µ–º–µ–Ω–∞—Ö.\n\n–ò —Ç–∞–∫, —Ä–∞–∑ —É–∂ —è –ø—å—é —Ç—É—Ç –∑–∞ —Ç–≤–æ–π —Å—á—ë—Ç, –º–æ–≥—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –≤—Å–µ —á–µ–≥–æ —Ç–≤–æ—è –¥—É—à–∞ –ø–æ–∂–µ–ª–∞–µ—Ç. –ë—É–¥—å —É–≤–µ—Ä–µ–Ω, –ª—É—á—à–µ–≥–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –≤ –æ–±–ª–∞—Å—Ç–∏ –≤—Å–µ–≥–æ —Ç—É—Ç –Ω–µ—Ç. –ß—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", parse_mode='markdown', reply_markup=markup)


@bot.callback_query_handler(func=lambda call: call.data.startswith('startBigCity_'))
def startBigCity_ans(call): 
    if (call.from_user.id == call.message.chat.id):
        pass
    else:
        return
    quest = call.data.split('_')
    q = quest[1]
    markup = InlineKeyboardMarkup()
    markup.row_width = 2
    text = call.message.text
    if q == '1':
        markup.add(InlineKeyboardButton('–†–∞—Å—Å–∫–∞–∂–∏ –Ω–µ–º–Ω–æ–≥–æ –æ –≥–æ—Ä–æ–¥–µ', callback_data="startBigCity_2"))
        text = "\n''–ß—Ç–æ —ç—Ç–æ –∑–∞ –º–µ—Å—Ç–æ?''\n_–í —Å—Ç–æ–ª–∏—Ü–µ –Ω–∞—à–µ–π —Å—Ç—Ä–∞–Ω—ã... –í–µ—Ä–Ω–µ–µ —Ç–æ–≥–æ, —á—Ç–æ –æ—Ç –Ω–µ—ë –æ—Å—Ç–∞–ª–æ—Å—å. –¢—É—Ç —ç–¥–∞–∫–∏–µ ''–º–∏—Ä–Ω—ã–µ –≤–æ–¥—ã'' –Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–∏ –≤—Å–µ—Ö —á–µ—Ç—ã—Ä—ë—Ö –≥—Ä—É–ø–ø–∏—Ä–æ–≤–æ–∫ –º–æ–≥—É—Ç –æ—Ç–¥–æ—Ö–Ω—É—Ç—å  –æ—Ç —Å—Ä–∞–∂–µ–Ω–∏–π, –Ω–µ–Ω–∞–≤–∏—Å—Ç–∏ –∏ –º–∞—Ç—é–∫–æ–≤._"
    elif q == '2':
        markup.add(InlineKeyboardButton('–ï—Å—Ç—å –ª–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏, –≤ –∫–æ—Ç–æ—Ä—ã–µ —è –º–æ–≥—É –≤—Å—Ç—É–ø–∏—Ç—å?', callback_data="startBigCity_3"))
        text += "\n\n''–ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏?''\n_–ú–¥–∞, –∫–∞–∫ –≤—Å—ë –∑–∞–ø—É—â–µ–Ω–æ. –õ–∞–¥–Ω–æ, –µ—Å–ª–∏ –≤–∫—Ä–∞—Ç—Ü–µ: —ç—Ç–æ —Ä–∞–∑–æ–±—â–µ–Ω–Ω—ã–µ –∫—É—á–∫–∏ –Ω–∞—Ä–æ–¥—É, –∫–æ—Ç–æ—Ä—ã–µ —Å—Ä–∞–∂–∞–µ—Ç—Å—è –∑–∞ —Å–≤–æ—ë –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏–µ. –î–∞–≤–∞–π –¥–∞–ª—å—à–µ._"
    elif q == '3':
        markup.add(InlineKeyboardButton('–†–∞—Å—Å–∫–∞–∂–∏ –æ –Ω–µ–±–µ—Å–Ω–æ–π –±–∞—à–Ω–µ', callback_data="startBigCity_4"))
        text += "\n\n''–ï—Å—Ç—å –ª–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏, –≤ –∫–æ—Ç–æ—Ä—ã–µ —è –º–æ–≥—É –≤—Å—Ç—É–ø–∏—Ç—å?''\n_–î–∞, —Ç—ã –º–æ–∂–µ—à—å –≤—Å—Ç—É–ø–∏—Ç—å –≤ –∫–∞–∫—É—é-–Ω–∏–±—É–¥—å –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫—É –∏ –ø–æ–º–æ–≥–∞—Ç—å –µ–π —Ä–∞–∑—É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –ø—Ä–æ –Ω–µ–±–µ—Å–Ω—É—é –±–∞—à–Ω—é. _"
    elif q == '4':
        markup.add(InlineKeyboardButton('–ö–∞–∫ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å?', callback_data="startBigCity_5"))
        text += "\n\n''–ë–∞—à–Ω—è?''\n_–ù—É, —ç—Ç–æ –ª–µ–≥–µ–Ω–¥–∞, –æ –∫–æ—Ç–æ—Ä–æ–π –∑–Ω–∞—Ç—å –¥–æ–ª–∂–µ–Ω –∫–∞–∂–¥—ã–π! –¢—ã –≤–æ–æ–±—â–µ –æ—Ç–∫—É–¥–∞ –≤–∑—è–ª—Å—è, —Ä–∞–∑ –Ω–µ –∑–Ω–∞–µ—à—å, —á—Ç–æ —ç—Ç–æ?.. –û—Ö, –ª–∞–¥–Ω–æ. –í –æ–±—â–µ–º, –ª–µ–≥–µ–Ω–¥–∞ –≥–ª–∞—Å–∏—Ç –æ —Ç–æ–º, —á—Ç–æ —ç—Ç–æ –±–∞—à–Ω—è, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ—Å—Ç–∏—Ä–∞–µ—Ç—Å—è –≤ —Å–∞–º–æ–µ –Ω–µ–±–æ –∏, –ø—Ä–æ–π–¥—è –¥–æ —Å–∞–º–æ–≥–æ –≤–µ—Ä—Ö–∞, —Ç—ã –º–æ–∂–µ—à—å —É–≤–∏–¥–µ—Ç—å –≤–µ—Å—å –Ω–∞—à –º–∏—Ä, –Ω–∞–π—Ç–∏... —ç—ç—ç... –¥—Ä–µ–≤–Ω–∏–µ —Å–≤–∏—Ç–∫–∏, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –æ–ø–∏—Å–∞–Ω–æ –Ω–∞—à–µ –ø—Ä–æ—à–ª–æ–µ, –∏ –ø–æ–≥–æ–≤–∞—Ä–∏–≤–∞—é—Ç, –≤ –Ω–∏—Ö –µ—Å—Ç—å –∫–∞—Ä—Ç–∞, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–≤–µ–¥—ë—Ç —Ç–µ–±—è –∫ –¥—Ä–∞–≥–æ—Ü–µ–Ω–Ω–æ—Å—Ç—è–º, –æ –∫–æ—Ç–æ—Ä—ã—Ö —Ç—ã –¥–∞–∂–µ –∏ –Ω–µ –º–µ—á—Ç–∞–ª..."
        text += "–í–æ—Ç –ø–æ—ç—Ç–æ–º—É –≤—Å–µ –∏ —Ü–∞–ø–∞—é—Ç—Å—è –º–µ–∂–¥—É —Å–æ–±–æ–π –∑–∞ –ø—Ä–∞–≤–æ –≤–ª–∞–¥–µ—Ç—å –±–∞—à–Ω–µ–π. –•–æ—Ç—è –¥–æ —Å–∏—Ö –ø–æ—Ä –Ω–∏–∫—Ç–æ –≤–Ω—É—Ç—Ä–∏ –Ω–∏—á–µ–≥–æ —Ç–∞–∫ –∏ –Ω–µ –Ω–∞—à—ë–ª..._"
    elif q == '5':
        markup.add(InlineKeyboardButton('–û–∫–µ–π, –∫–∞–∫ –ø–æ–ø–∞—Å—Ç—å –≤ —ç—Ç–∏ —Ç–≤–æ–∏ "–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏"?', callback_data="startBigCity_6"))
        text += "\n\n''–ö–∞–∫ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å?''\n_–ê –∫–∞–∫ —Ç—ã –¥–æ —ç—Ç–æ–≥–æ —Å–µ–±–µ –Ω–∞ –∂–∏–∑–Ω—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–ª? –Ø —Å–º–æ—Ç—Ä—é, –±—Ä–æ–Ω—è —É —Ç–µ–±—è –Ω–µ —Ç–∞–∫ —É–∂ –∏ –ø–ª–æ—Ö–∞, –æ—Ä—É–∂–∏–µ –ø—Ä–∏ —Å–µ–±–µ –µ—Å—Ç—å, –¥–∞ –∏ —Å–∞–º —Ç—ã –≤—ã–≥–ª—è–¥–∏—à—å –Ω–µ —Å–ª–∞–±—ã–º._"
    elif q == '6':
        fraks = db.Fraks.select().order_by(db.Fraks.players.desc()).limit(5)
        count = 0
        fr = {'–ì—Ä—è–∑–Ω–æ–µ –Ω–µ–±–æ': '1', '–í–∞–≤–∏–ª–æ–Ω': '2', '–ù–µ–±–µ—Å–Ω—ã–µ —Ä—ã—Ü–∞—Ä–∏': '3', '–•—Ä–∞–Ω–∏—Ç–µ–ª–∏': '4'}
        f = {'–ì—Ä—è–∑–Ω–æ–µ –Ω–µ–±–æ': 'üåã–ì—Ä—è–∑–Ω–æ–µ –Ω–µ–±–æ', '–í–∞–≤–∏–ª–æ–Ω': 'üóº–í–∞–≤–∏–ª–æ–Ω', '–ù–µ–±–µ—Å–Ω—ã–µ —Ä—ã—Ü–∞—Ä–∏': '‚öîÔ∏è–ù–µ–±–µ—Å–Ω—ã–µ —Ä—ã—Ü–∞—Ä–∏', '–•—Ä–∞–Ω–∏—Ç–µ–ª–∏': 'üí†–•—Ä–∞–Ω–∏—Ç–µ–ª–∏'}
        for x in fraks:
            count += 2
            markup.add(InlineKeyboardButton('{} (+{}üíé)'.format(f[x.name], count), callback_data="startBigCity_7_{}".format(fr[x.name])))
        text += "\n\n''–û–∫–µ–π, –∫–∞–∫ –ø–æ–ø–∞—Å—Ç—å –≤ —ç—Ç–∏ —Ç–≤–æ–∏ ''–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏''? ''\n_–¢—ã —Ç–æ—á–Ω–æ —Ö–æ—á–µ—à—å –≤—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫—É? –í–ø—Ä–æ—á–µ–º, –∫–∞–∫–∞—è —Ä–∞–∑–Ω–∏—Ü–∞. –ú–£–ñ–ò–ö–ò, –ó–î–ï–°–¨ –ù–£–ñ–ù–û –ì–†–£–ü–ü–ò–†–û–í–ö–£ –í–´–ë–†–ê–¢–¨, –ï–°–õ–ò –í–´ –ü–û–ù–ò–ú–ê–ï–¢–ï –û –ß–Å–ú –Ø!..''_\n\n\n"
    elif q == '7':
        user = db.Users.get(user_id=call.from_user.id)
        f = quest[2]
        fraks = db.Fraks.select().order_by(db.Fraks.players.desc()).limit(5)
        count = 0
        fbonus = {}
        for x in fraks:
            count += 2
            fbonus[x.name] = count
        if f == '1':
            link = 'https://t.me/joinchat/Kd-6VBY61CSikVObkJdJJQ'
            user.frak = "–ì—Ä—è–∑–Ω–æ–µ –Ω–µ–±–æ"
            user.almaz += fbonus[user.frak]
            frak = db.Fraks.get(name=user.frak)
            frak.players += 1
        elif f == '2':
            link = 'https://t.me/joinchat/Kd-6VBY5L9HenYxFd_PSOw'
            user.frak = "–í–∞–≤–∏–ª–æ–Ω"
            user.almaz += fbonus[user.frak]
            frak = db.Fraks.get(name=user.frak)
            frak.players += 1
        elif f == '3':
            link = 'https://t.me/joinchat/Kd-6VFdxcmk2qB352-qD9A'
            user.frak = "–ù–µ–±–µ—Å–Ω—ã–µ —Ä—ã—Ü–∞—Ä–∏"
            user.almaz += fbonus[user.frak]
            frak = db.Fraks.get(name=user.frak)
            frak.players += 1
        elif f == '4':
            link = 'https://t.me/joinchat/Kd-6VBmrXcTK0Lt9lMDmEg'
            user.frak = "–•—Ä–∞–Ω–∏—Ç–µ–ª–∏"
            user.almaz += fbonus[user.frak]
            frak = db.Fraks.get(name=user.frak)
            frak.players += 1
        frak.save()
        minusmoney = user.money
        user.money = 0
        user.position = '–ü–ª–æ—â–∞–¥—å'
        user.location = '–•—ç–≤–µ–Ω–±—É—Ä–≥'
        user.save()
        leader = db.Users.get(id=frak.leader)
        try:
            bot.send_message(leader.user_id, "–ù–æ–≤—ã–π –∏–≥—Ä–æ–∫ –≤ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–µ!\n{} - {}".format(user.username, call.from_user.username))
        except:
            pass
        text += "\n\n\n–ü–æ—Å–ª–µ –≤–Ω–µ–∑–∞–ø–Ω–æ–≥–æ —É–¥–∞—Ä–∞ –ø–æ –≥–æ–ª–æ–≤–µ, –≤—Å–µ –¥–∞–ª—å—à–µ –±—ã–ª–æ –∫–∞–∫ –≤ —Ç—É–º–∞–Ω–µ. –¢—ã –ø—Ä–æ—Å–Ω—É–ª—Å—è —Å–ø—É—Å—Ç—è –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ —Å –±–æ–ª—å—é –Ω–∞ –ª–µ–≤–æ–º –∂–æ–ø–Ω–æ–º –ø–æ–ª—É—à–∞—Ä–∏–∏ –∏ –±–µ–∑ –≥—Ä–æ—à–∞ –≤ –∫–∞—Ä–º–∞–Ω–µ. –ù–∞ –≤–æ–ø—Ä–æ—Å –æ —Ç–æ–º, —á—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å, –±–∞—Ä–º–µ–Ω –æ—Ç–≤–µ—á–∞–ª —Ç–æ–ª—å–∫–æ —Ç–æ, —á—Ç–æ —Ç—ã —É–≥–æ—â–∞–ª –≤—Å–µ—Ö –≤—ã–ø–∏–≤–∫–æ–π –∏ —Ç–µ–±–µ –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –∫–ª–µ–π–º–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ –Ω–∞... –î—É–º–∞—é —Ç—ã –¥–æ–≥–∞–¥—ã–≤–∞–µ—à—å—Å—è –Ω–∞ —á—Ç–æ.\n\n–ü–æ—Ç—Ä–∞—á–µ–Ω–æ {}üí∞\n\n\n–ù–∞ –∑–∞–¥–Ω–∏—Ü–µ, –ø–æ–º–∏–º–æ –Ω–∞–∑–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏, —É–¥–æ–±–Ω–æ –≤—ã–±–∏—Ç–∞ —Å—Å—ã–ª–∫–∞-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞ —á–∞—Ç {}".format(minusmoney, link)
        gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id)
    gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id, reply_markup=markup, parse_mode = 'markdown')



@bot.callback_query_handler(func=lambda call: call.data.startswith('nav_bigcity_'))
def nav_bigcity(call): 
    if (call.from_user.id == call.message.chat.id):
        pass
    else:
        return
    nav = call.data.split('_')
    navWhere = nav[2]
    user = db.Users.get(user_id=call.from_user.id)
    if navWhere == "onsen":
        newPos = "–ò—Å—Ç–æ—á–Ω–∏–∫–∏"
        if (str(user.location) == "–•—ç–≤–µ–Ω–±—É—Ä–≥") and (int(user.hp) > int(user.nowhp)) and (str(user.position) != newPos):
            user.position = newPos
            user.save()
            text = "_–ù—É —Ç–µ–ø–µ—Ä—å —Ç–æ —è —Ç–æ—á–Ω–æ –æ—Ç–¥–æ—Ö–Ω—É –≤ –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö —Å –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–º–∏ –¥–µ–≤—É—à–∫–∞–º–∏! –ù–µ –∑—Ä—è –∂–µ —è –∏—Å—Ç–æ–ø—Ç–∞–ª –≤—Å—é —Å—Ä–∞–Ω—É—é –ø—É—Å—Ç—ã–Ω—é –∏ –ø–æ—Ç–µ—Ä—è–ª —Å—Ç–æ–ª—å–∫–æ –∑–æ–ª–æ—Ç–∞._\n\n\n–ê –ø–æ—Ç–æ–º —Ç—ã –∑–∞–∫–æ–Ω—á–∏–ª —Ñ–∞–Ω—Ç–∞–∑–∏—Ä–æ–≤–∞—Ç—å –∏ –≤–æ—à—ë–ª –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—é, —Ç–∞–∫ –Ω–∞–∑—ã–≤–∞–µ–º—ã—Ö, –≥–æ—Ä—è—á–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤.\n\n–ù–∏—á–µ–≥–æ –Ω–µ–æ–±—ã—á–Ω–æ–≥–æ, –∫—É—á–∞ –≤–∞–Ω–Ω —Å–æ–µ–¥–∏–Ω—ë–Ω–Ω—ã—Ö –º–µ–∂–¥—É —Å–æ–±–æ–π –ø—Ä–æ—Ç–µ–∫–∞—é—â–∏–º —Ç—Ä—É–±–∞–º–∏, –ø–æ –∫–æ—Ç–æ—Ä—ã–º —Ç–µ—á—ë—Ç –≤–æ–¥–∞."
        elif str(user.location) != "–•—ç–≤–µ–Ω–±—É—Ä–≥":
            text = "–¢—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –≤–Ω–µ –≥–æ—Ä–æ–¥–∞."
        elif int(user.hp) <= int(user.nowhp):
            text = "_–ü–æ—Å–ª—É—à–∞–π... –ò—Å—Ç–æ—á–Ω–∏–∫–∏ –Ω—É–∂–Ω—ã –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∏—Å—Ü–µ–ª—è—Ç—å—Å—è, –∞ –Ω–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —Å—é–¥–∞ –∫–∞–∂–¥—ã–π —Ä–∞–∑ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –±–∞–±—É –æ—Ö–æ—Ç–∞!_"
        elif str(user.position) == newPos:
            text = "–¢—ã –∑–∞–Ω–∏–º–∞–µ—à—å—Å—è *CENSORED*\n–ò—Å—Ü–µ–ª–µ–Ω–∏–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ, –Ω—É–∂–Ω–æ –Ω–µ–º–Ω–æ–≥–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å"
        else:
            text = "–û—à–∏–±–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ–ª—è. Location {} \n Hp/nowhp {}/{}\n nowPos/newPos {}/{}\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å —Å —ç—Ç–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –≤ /report".format(str(user.location), str(user.nowhp), str(user.hp), str(user.position), str(newPos))
        gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id, parse_mode = 'markdown')
    elif navWhere == "hotel":
        newPos = "–û—Ç–µ–ª—å"
        if (str(user.location) == "–•—ç–≤–µ–Ω–±—É—Ä–≥") and (str(user.position) != newPos):
            user.position = newPos
            user.save()
            markup = InlineKeyboardMarkup()
            markup.row_width = 2
            markup.add(InlineKeyboardButton('–ü–æ–π—Ç–∏ –≤ –Ω–æ–º–µ—Ä (5 –∑–æ–ª–æ—Ç—ã—Ö)', callback_data="hotel_start"))
            markup.add(InlineKeyboardButton('–£–π—Ç–∏', callback_data="hotel_return"))
            text = '_¬´–û—Ç–µ–ª—å¬ª –æ–Ω –∂–µ –±—ã–≤—à–∏–π –±–æ—Ä–¥–µ–ª—å, –∑–∞–∫—Ä—ã—Ç—ã–π –∏–∑-–∑–∞ –Ω–µ—Ö–≤–∞—Ç–∫–∏ —Ä–∞–±–æ—Ç–Ω–∏—Ü, –∫–æ–Ω–µ—á–Ω–æ, –≤—ã–≥–ª—è–¥–∏—Ç –ª—É—á—à–µ –ø–æ—Å–ª–µ —Å–º–µ–Ω—ã –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∏ —Ä–µ–º–æ–Ω—Ç–∞, –æ–¥–Ω–∞–∫–æ  –∑–∞–ø–∞—Ö –µ–≥–æ –ø—Ä–æ—à–ª–æ–π –∂–∏–∑–Ω–∏ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –∑–¥–µ—Å—å –µ—â—ë –Ω–∞–¥–æ–ª–≥–æ_'
            gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id, parse_mode = 'markdown', reply_markup=markup)
            return
        elif str(user.location) != "–•—ç–≤–µ–Ω–±—É—Ä–≥":
            text = "–¢—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –≤–Ω–µ –≥–æ—Ä–æ–¥–∞."
        elif str(user.position) == newPos:
            text = "–¢—ã —É–∂–µ –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –≤ –æ—Ç–µ–ª–µ."
        else:
            text = "–û—à–∏–±–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ–ª—è. \nLocation {}\n nowPos/newPos {}/{}\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å —Å —ç—Ç–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –∏ —Å–∫—Ä–∏–Ω–æ–º –ø—Ä–æ—Ñ–∏–ª—è –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É @kakushigoto".format(str(user.location), str(user.position), str(newPos))
        gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id, parse_mode = 'markdown')
    elif navWhere == "shop":
        newPos = "–ú–∞–≥–∞–∑–∏–Ω"
        if (str(user.location) == "–•—ç–≤–µ–Ω–±—É—Ä–≥") and (str(user.position) != newPos):
            user.position = newPos
            user.save()
            goToShop(call)
        elif str(user.location) != "–•—ç–≤–µ–Ω–±—É—Ä–≥":
            text = "–¢—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤–Ω–µ –≥–æ—Ä–æ–¥–∞"
            gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id, parse_mode = 'markdown')
        elif str(user.position) == newPos:
            text = "–¢—ã —É–∂–µ –≤ –º–∞–≥–∞–∑–∏–Ω–µ."
            gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id, parse_mode = 'markdown')
            goToShop(call)
    elif navWhere == "centr":
        newPos = "–ü–ª–æ—â–∞–¥—å"
        if user.location == "–•—ç–≤–µ–Ω–±—É—Ä–≥":
            pass
        else:
            text = "–¢—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤–Ω–µ –≥–æ—Ä–æ–¥–∞."
            gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id)
            return
        newPos = "–ü–ª–æ—â–∞–¥—å"
        user.position = newPos
        user.save()
        markup = InlineKeyboardMarkup()
        markup.row_width = 2
        markup.add(InlineKeyboardButton('üèã‚Äç‚ôÇ–ö–∞—á–∞–ª–∫–∞', callback_data="nav_bigcity_kachalka"))
        markup.add(InlineKeyboardButton('üè¶–õ–æ–º–±–∞—Ä–¥', callback_data="nav_bigcity_lombard"))
        markup.add(InlineKeyboardButton('üë©‚Äçüíº–†–∞—Å–∫—É–ª–æ–≤–∞', callback_data="nav_bigcity_raskul"))
        markup.add(InlineKeyboardButton('‚öñÔ∏è–¢—Ä–µ–π–¥—ã', callback_data="nav_bigcity_trades"))
        markup.add(InlineKeyboardButton('‚õ≤Ô∏è–ò—Å—Ç–æ—á–Ω–∏–∫–∏', callback_data="nav_bigcity_onsen"))
        markup.add(InlineKeyboardButton('üè™–ú–∞–≥–∞–∑–∏–Ω', callback_data="nav_bigcity_shop"))
        markup.add(InlineKeyboardButton('üè´–û—Ç–µ–ª—å', callback_data="nav_bigcity_hotel"))
        markup.add(InlineKeyboardButton('üë®üèæ‚Äçü¶≥–û–¥–∏–Ω–æ–∫–∏–π –±–æ–º–∂', callback_data="nav_bigcity_skupshik"))
        markup.add(InlineKeyboardButton('üèú–ü–æ–∫–∏–Ω—É—Ç—å –≥–æ—Ä–æ–¥', callback_data="nav_bigcity_exit"))
        text = "–ü–ª–æ—â–∞–¥—å –∫–∞–∫ –ø–ª–æ—â–∞–¥—å. –í–µ–¥—å –ø–ª–æ—â–∞–¥—å –æ–Ω–∞ –∏ –≤ –•—ç–≤–µ–Ω–±—É—Ä–≥–µ –ø–ª–æ—â–∞–¥—å, –≤–µ—Ä–Ω–æ? –ó–Ω–∞–µ—à—å –∫–∞–∫ –≤—ã–≥–ª—è–¥—è—Ç –ø–ª–æ—â–∞–¥–∏, —Ç–∞–∫ –≤–æ—Ç –Ω–∞—à–∞ –ø–ª–æ—â–∞–¥—å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ —Ç–∞–∫–∞—è –∂–µ, –∫–∞–∫ –∏ –≤—Å–µ –ø–ª–æ—â–∞–¥–∏, —á—Ç–æ —Ç—ã –≤–∏–¥–µ–ª –¥–æ –Ω–µ—ë. –í –æ–±—â–µ–º, –ø–ª–æ—â–∞–¥—å, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≥–ª—è–¥–∏—Ç –∫–∞–∫ –ø–ª–æ—â–∞–¥—å ‚Äî –≤–æ—Ç –æ–Ω–∞, –Ω–∞—à–∞ –ø–ª–æ—â–∞–¥—å –•—ç–≤–µ–Ω–±—É—Ä–≥–∞."
        gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id, reply_markup=markup)
    elif navWhere == "exit":
        try:
            navg = nav[3]
            if navg == '1':
                newLocation = "–°–ª—É—á–∞–π–Ω—ã–π –ª–µ—Å"
                if user.location == "–•—ç–≤–µ–Ω–±—É—Ä–≥":
                    pass
                else:
                    gg = bot.edit_message_text("–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤–Ω–µ –≥–æ—Ä–æ–¥–∞.", call.message.chat.id, call.message.message_id, parse_mode = 'markdown')
                    return
                user.location = newLocation
                user.progStatus = 1
                user.progLoc = '–°–ª—É—á–∞–π–Ω—ã–π –ª–µ—Å|0'
                user.save()
                text = "–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏—Å—å –≤ –°–ª—É—á–∞–π–Ω—ã–π –ª–µ—Å"
                gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id)
                return
            elif navg == 'tower':
                newLocation = "–¢—Ä–æ–ø–∞ –∫ –±–∞—à–Ω–µ"
                if user.location == "–•—ç–≤–µ–Ω–±—É—Ä–≥":
                    pass
                else:
                    gg = bot.edit_message_text("–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤–Ω–µ –≥–æ—Ä–æ–¥–∞.", call.message.chat.id, call.message.message_id, parse_mode = 'markdown')
                    return
                user.location = newLocation
                user.progStatus = 1
                user.progLoc = '–¢—Ä–æ–ø–∞ –∫ –±–∞—à–Ω–µ|0'
                user.save()
                text = "–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏—Å—å –∫ –ù–µ–±–µ—Å–Ω–æ–π –±–∞—à–Ω–µ"
                gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id)
                return
            else:
                markup = InlineKeyboardMarkup()
                markup.row_width = 2
                markup.add(InlineKeyboardButton('–°–ª—É—á–∞–π–Ω—ã–π –ª–µ—Å', callback_data="nav_bigcity_exit_1"))
                markup.add(InlineKeyboardButton('–ò–¥—Ç–∏ –∫ –±–∞—à–Ω–µ', callback_data="nav_bigcity_exit_tower"))
                gg = bot.edit_message_text("–í—ã–±–µ—Ä–∏—Ç–µ, –∫—É–¥–∞ —Ö–æ—Ç–∏—Ç–µ –ø–æ–π—Ç–∏:", call.message.chat.id, call.message.message_id, reply_markup=markup)
        except:
            markup = InlineKeyboardMarkup()
            markup.row_width = 2
            markup.add(InlineKeyboardButton('–°–ª—É—á–∞–π–Ω—ã–π –ª–µ—Å', callback_data="nav_bigcity_exit_1"))
            markup.add(InlineKeyboardButton('–ò–¥—Ç–∏ –∫ –±–∞—à–Ω–µ', callback_data="nav_bigcity_exit_tower"))
            gg = bot.edit_message_text("–í—ã–±–µ—Ä–∏—Ç–µ, –∫—É–¥–∞ —Ö–æ—Ç–∏—Ç–µ –ø–æ–π—Ç–∏:", call.message.chat.id, call.message.message_id, reply_markup=markup)
    elif navWhere == "kachalka":
        if user.lvl == 1:
            text = "–ö–∞—á–∞–ª–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Å–æ –≤—Ç–æ—Ä–æ–≥–æ —É—Ä–æ–≤–Ω—è."
            gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id)
            return
        else:
            atk = user.atk
            hp = user.hp
            needAtk = int(3 * ((atk - 4) / 2))
            needHp = int(3 * ((hp - 9) / 2))
            text = "–®—Ç–∞–Ω–≥–∏ –∏–∑ –ø–∞–ª–æ–∫ –∏ –ø–æ–∫—Ä—ã—à–µ–∫, —Ç—Ä–µ–Ω–∞–∂—ë—Ä—ã –∏–∑ –ø–∞–ª–æ–∫ –∏ –ø–æ–∫—Ä—ã—à–µ–∫, –¥–≤–µ—Ä—å –≤ –∑–¥–∞–Ω–∏–µ –∏–∑ –ø–∞–ª–æ–∫ –∏ –ø–æ–∫—Ä—ã—à–µ–∫... –î–∞ —á–µ–≥–æ —É–∂ —Ç–∞–∏—Ç—å ‚Äî —Å–∞–º–æ –∑–¥–∞–Ω–∏–µ —Ç–æ–∂–µ –∏–∑ –ø–∞–ª–æ–∫ –∏ –ø–æ–∫—Ä—ã—à–µ–∫. –†–∞–∑–≤–µ —á—Ç–æ —Ç–∞–±–ª–∏—á–∫–∞ ¬´–°–∞–º—ã–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–Ω—ã–µ —Ç—Ä–µ–Ω–∞–∂—ë—Ä—ã –Ω–∞ –ª—é–±–æ–π –≤–∫—É—Å –∏ —Ü–≤–µ—Ç!¬ª —Å–¥–µ–ª–∞–Ω–∞ –Ω–µ –∏–∑ –ø–æ–∫—Ä—ã—à–µ–∫\n–£–ª—É—á—à–∏—Ç—å –Ω–∞–≤—ã–∫ üí¢–ê—Ç–∞–∫–∞ - {}üí∞\n–£–ª—É—á—à–∏—Ç—å –Ω–∞–≤—ã–∫ ‚ù§Ô∏è–ó–¥–æ—Ä–æ–≤—å–µ - {}üí∞\n‚ö†Ô∏è–ê–∫—Ü–∏—è –æ—Ç –∫–∞—á–∞–ª–∫–∏ - –∫—Ç–æ –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –ø—Ä–æ–∫–∞—á–∞–µ—Ç—Å—è –∑–∞ –Ω–µ–¥–µ–ª—é - –ø–æ–ª—É—á–∏—Ç +20‚ù§Ô∏è –∏ +20üí¢".format(str(needAtk), str(needHp))
        markup = InlineKeyboardMarkup()
        markup.row_width = 2
        markup.add(InlineKeyboardButton('–ü—Ä–æ–∫–∞—á–∞—Ç—å –∞—Ç–∞–∫—É ({}üí∞)'.format(needAtk), callback_data="bigkach_atk"))
        markup.add(InlineKeyboardButton('–ü—Ä–æ–∫–∞—á–∞—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ ({}üí∞)'.format(needHp), callback_data="bigkach_hp"))
        markup.add(InlineKeyboardButton('–í—ã–π—Ç–∏'.format(needHp), callback_data="nav_bigcity_centr"))
        gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id, reply_markup=markup)
    elif navWhere == "trades":
        location = "–•—ç–≤–µ–Ω–±—É—Ä–≥"
        position = "–ü–ª–æ—â–∞–¥—å"
        if user.location == location and user.position == position:
            pass
        else:
            text = "–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–µ –Ω–∞ –ø–ª–æ—â–∞–¥–∏."
            gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id)
            return
        if user.lvl < 5:
            text = "–¢—Ä–µ–π–¥—ã –¥–æ—Å—Ç—É–ø–Ω—ã —Å 5 —É—Ä–æ–≤–Ω—è."
            gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id)
            return
        else:
            pass
        result = db.Users.select().where(db.Users.location==location, db.Users.position==position, db.Users.user_id != call.from_user.id)
        markup = InlineKeyboardMarkup()
        markup.row_width = 2
        for dict in result:
            markup.add(InlineKeyboardButton('{}'.format(dict.username), callback_data="trade_{}".format(dict.id)))
        text = "–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä–æ–∫–∞, —Å –∫–æ—Ç–æ—Ä—ã–º —Ö–æ—Ç–∏—Ç–µ –æ–±–º–µ–Ω—è—Ç—å—Å—è."
        markup.add(InlineKeyboardButton('–í—ã–π—Ç–∏', callback_data="nav_bigcity_centr"))
        gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id, reply_markup=markup)
        return
    elif navWhere == "lombard":
        text = "–õ–æ–º–±–∞—Ä–¥ ‚Äî –º–µ—Å—Ç–æ —ç–ª–∏—Ç–Ω–æ–µ, –Ω–æ –Ω–µ –º–µ–Ω–µ–µ –º–µ—Ä–∑–∫–æ–µ, —á–µ–º –≤—Å–µ, —á—Ç–æ —Ç—ã –≤–∏–¥–µ–ª –¥–æ –Ω–µ–≥–æ –∏, –≤–µ—Ä–æ—è—Ç–Ω–æ, —É–≤–∏–¥–∏—à—å –ø–æ—Å–ª–µ. –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –Ω–µ—á—Ç–æ –±–æ–ª–µ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ —Ç–æ–≥–æ –º—É—Å–æ—Ä–∞ –∏–∑ –æ–±—ã—á–Ω–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞. –ò –¥–∞, ''–õ–æ–º–±–∞—Ä–¥'' ‚Äî —ç—Ç–æ –≤—Å–µ–≥–æ –ª–∏—à—å –Ω–∞–∑–≤–∞–Ω–∏–µ, –Ω–µ –±–æ–ª–µ–µ.\n–í–∞—à –±–∞–ª–∞–Ω—Å: {}üíé".format(str(user.almaz))
        markup = InlineKeyboardMarkup()
        markup.row_width = 2
        markup.add(InlineKeyboardButton('–ö—É–ø–∏—Ç—å üíé', callback_data="donate_start"))
        markup.add(InlineKeyboardButton('–ú–∞–≥–∞–∑–∏–Ω üíé', callback_data="donateshop"))
        markup.add(InlineKeyboardButton('–ü—Ä–æ–¥–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç', callback_data="shopsell"))
        markup.add(InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data="nav_bigcity_centr"))
        gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id, reply_markup=markup)
        return
    elif navWhere == "skupshik":
        text = "–°—Ç–æ–∏—Ç, –∑–Ω–∞—á–∏—Ç, –≤–æ–∑–ª–µ —Ñ–æ–Ω—Ç–∞–Ω–∞ —Å–æ–ª–∏–¥–Ω–æ–≥–æ –≤–∏–¥–∞ –±–æ–º–∂, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –ø–æ–¥–æ–π—Ç–∏ –Ω–µ —Å—Ç—Ä–∞—à–Ω–æ. –ü–æ–º–∞–Ω–∏–≤ —Ç–µ–±—è –ø–∞–ª—å—Ü–µ–º, –ø—ã—Ç–∞–µ—Ç—Å—è –∫—É–ø–∏—Ç—å —É —Ç–µ–±—è –≤—Å—è–∫–∏–π —Ä–µ–¥–∫–∏–π —Ö–ª–∞–º."
        markup = InlineKeyboardMarkup()
        markup.row_width = 2
        markup.add(InlineKeyboardButton('–ò–¥—Ç–∏ –∫ –±–æ–º–∂—É', callback_data="bomjsell"))
        markup.add(InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data="nav_bigcity_centr"))
        gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id, reply_markup=markup)
        return
    elif navWhere == "raskul":
        if user.lvl < 7:
            text = "–ì–æ—Ä—è—á–∞—è –¥–∞–º–∞ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∫ —Å–µ–±–µ —Ç–æ–ª—å–∫–æ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π –≤—ã—à–µ 7 —É—Ä–æ–≤–Ω—è."
            gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id)
            return
        else:
            pass
        if user.location != "–•—ç–≤–µ–Ω–±—É—Ä–≥":
            text = "–¢—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –Ω–µ –≤ –≥–æ—Ä–æ–¥–µ."
            gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id, reply_markup=markup)
            return
        location = "–•—ç–≤–µ–Ω–±—É—Ä–≥"
        position = "–ê—Ä–µ–Ω–∞"
        if user.nowhp < user.hp:
            text = "–ü–æ–¥–æ–π–¥—è –∫ —Å–∫—É—á–∞—é—â–µ–π –¥–∞–º–µ, –æ–Ω–∞ –≥–ª—è–Ω—É–ª–∞ –Ω–∞ —Ç–µ–±—è –∏ –ø—Ä–µ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ —Å–∫–∞–∑–∞–ª–∞, —á—Ç–æ —Å —Ö–ª—é–ø–∏–∫–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –µ–¥–≤–∞ –Ω–∞ –Ω–æ–≥–∞—Ö —Å—Ç–æ—è—Ç, –æ–Ω–∞ –Ω–µ –∏–≥—Ä–∞–µ—Ç."
            gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id)
        elif user.money < 35:
            text = "–ü–æ–¥–æ–π–¥—è –∫ —Å–∫—É—á–∞—é—â–µ–π –¥–∞–º–µ, –æ–Ω–∞ –≥–ª—è–Ω—É–ª–∞ –Ω–∞ —Ç–µ–±—è –∏ –ø–æ–ø—Ä–æ—Å–∏–ª–∞ –æ–ø–ª–∞—Ç—É –≤–ø–µ—Ä—ë–¥ –≤ —Ä–∞–∑–º–µ—Ä–µ 35üí∞. –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –¥–µ–Ω–µ–≥ —É —Ç–µ–±—è –Ω–µ –Ω–∞—à–ª–æ—Å—å."
            gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id)
        else:
            user.position = position
            user.money = user.money - 35
            user.save()
            player = call.from_user.id
            pvpcheck(player, call)

@bot.callback_query_handler(func=lambda call: call.data.startswith('bigkach_'))
def bigkach(call): 
    if (call.from_user.id == call.message.chat.id):
        pass
    else:
        return
    _kach = call.data.split('_')
    kach = _kach[1]
    user = db.Users.get(user_id=call.from_user.id)
    if kach == 'atk':
        atk = user.atk
        needAtk = int(3 * ((atk - 4) / 2))
        if user.location == "–•—ç–≤–µ–Ω–±—É—Ä–≥":
            pass
        else:
            text = "–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤–Ω–µ –≥–æ—Ä–æ–¥–∞."
            gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id)
            return
        if (user.money - needAtk) >= 0:
            user.atk = user.atk + 1
            user.money = user.money - needAtk
            user.save()
            atk = user.atk
            hp = user.hp
            _needAtk = int(3 * ((atk - 4) / 2))
            _needHp = int(3 * ((hp - 9) / 2))
            text = "–¢–µ–∫—É—â–µ–µ –∑–¥–æ—Ä–æ–≤—å–µ: {}\n–¢–µ–∫—É—â–∞—è –∞—Ç–∞–∫–∞: {}\n–ë–∞–ª–∞–Ω—Å: {}üí∞\n–£–ª—É—á—à–∏—Ç—å –Ω–∞–≤—ã–∫ üí¢–ê—Ç–∞–∫–∞ - {}üí∞\n–£–ª—É—á—à–∏—Ç—å –Ω–∞–≤—ã–∫ ‚ù§Ô∏è–ó–¥–æ—Ä–æ–≤—å–µ - {}üí∞".format(str(hp), str(user.atk), str(user.money), str(_needAtk), str(_needHp))
            bot.answer_callback_query(callback_query_id=call.id, show_alert=False, text="üí¢ –ê—Ç–∞–∫–∞ —É–ª—É—á—à–µ–Ω–∞")                
            markup = InlineKeyboardMarkup()
            markup.row_width = 2
            markup.add(InlineKeyboardButton('–ü—Ä–æ–∫–∞—á–∞—Ç—å –∞—Ç–∞–∫—É ({}üí∞)'.format(_needAtk), callback_data="bigkach_atk"))
            markup.add(InlineKeyboardButton('–ü—Ä–æ–∫–∞—á–∞—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ ({}üí∞)'.format(_needHp), callback_data="bigkach_hp"))
            markup.add(InlineKeyboardButton('–í—ã–π—Ç–∏', callback_data="nav_bigcity_centr"))
            f = open('1.txt', 'a')
            f.write("\n{}".format(call.from_user.id))
            f.close()
            gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id, reply_markup=markup)
        else:
            bot.answer_callback_query(callback_query_id=call.id, show_alert=False, text="–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –∑–æ–ª–æ—Ç–∞")                
    elif kach == 'hp':
        hp = user.hp
        needHp = int(3 * ((hp - 9) / 2))
        if user.location == "–•—ç–≤–µ–Ω–±—É—Ä–≥":
            pass
        else:
            text = "–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤–Ω–µ –≥–æ—Ä–æ–¥–∞."
            gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id)
            return
        if (user.money - needHp) >= 0:
            user.hp = user.hp + 1
            user.nowhp = user.nowhp + 1
            user.money = user.money - needHp
            user.save()
            atk = user.atk
            hp = user.hp
            _needAtk = int(3 * ((atk - 4) / 2))
            _needHp = int(3 * ((hp - 9) / 2))
            text = "–¢–µ–∫—É—â–µ–µ –∑–¥–æ—Ä–æ–≤—å–µ: {}\n–¢–µ–∫—É—â–∞—è –∞—Ç–∞–∫–∞: {}\n–ë–∞–ª–∞–Ω—Å: {}üí∞\n–£–ª—É—á—à–∏—Ç—å –Ω–∞–≤—ã–∫ üí¢–ê—Ç–∞–∫–∞ - {}üí∞\n–£–ª—É—á—à–∏—Ç—å –Ω–∞–≤—ã–∫ ‚ù§Ô∏è–ó–¥–æ—Ä–æ–≤—å–µ - {}üí∞".format(str(hp), str(user.atk), str(user.money), str(_needAtk), str(_needHp))
            markup = InlineKeyboardMarkup()
            markup.row_width = 2
            markup.add(InlineKeyboardButton('–ü—Ä–æ–∫–∞—á–∞—Ç—å –∞—Ç–∞–∫—É ({}üí∞)'.format(_needAtk), callback_data="bigkach_atk"))
            markup.add(InlineKeyboardButton('–ü—Ä–æ–∫–∞—á–∞—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ ({}üí∞)'.format(_needHp), callback_data="bigkach_hp"))
            markup.add(InlineKeyboardButton('–í—ã–π—Ç–∏', callback_data="nav_bigcity_centr"))
            bot.answer_callback_query(callback_query_id=call.id, show_alert=False, text="‚ù§Ô∏è–ó–¥–æ—Ä–æ–≤—å–µ —É–ª—É—á—à–µ–Ω–æ")                
            f = open('1.txt', 'a')
            f.write("\n{}".format(call.from_user.id))
            f.close()
            gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id, reply_markup=markup)
        else:
            bot.answer_callback_query(callback_query_id=call.id, show_alert=False, text="–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –∑–æ–ª–æ—Ç–∞")                



@bot.message_handler(commands=['watch_around'])
def watcharound(m):
    if m.from_user.id == m.chat.id:
        pass
    else:
        return
    user = db.Users.get(user_id=m.from_user.id)
    if user.location != '–ì–æ—Ä–æ–¥' and user.location != '–•—ç–≤–µ–Ω–±—É—Ä–≥' and user.location != '–ü—É—Å—Ç—ã–Ω—è' and user.location != '–°–≤–∞–ª–∫–∞':
        pass
    else:
        bot.reply_to(m, "–í —ç—Ç–æ–π –ª–æ–∫–∞—Ü–∏–∏ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é")
        return
    if user.location == '–ü–µ—Ä–≤—ã–π —ç—Ç–∞–∂ –±–∞—à–Ω–∏' or user.location == '–õ–µ—Å–Ω–∞—è –≥—Ä–æ–±–Ω–∏—Ü–∞' or user.location == '–í—Ç–æ—Ä–æ–π —ç—Ç–∞–∂ –±–∞—à–Ω–∏' or user.location == '–¢—Ä–µ—Ç–∏–π —ç—Ç–∞–∂ –±–∞—à–Ω–∏' or user.location == '–ß–µ—Ç–≤—ë—Ä—Ç—ã–π —ç—Ç–∞–∂ –±–∞—à–Ω–∏':
        bot.send_message(m.chat.id, "/watch_around –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        return
    nowProgLoc = user.progLoc
    _pl = nowProgLoc.split('|')
    num = _pl[1]
    users = db.Users.select().where(db.Users.progLoc==user.progLoc, db.Users.id!=user.id, db.Users.location==user.location)
    text = "‚ù§Ô∏è{}/{} ‚ö°Ô∏è{}/100 üçó{}/100\nüè≠{}: –ö-{}\n\n–°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ —Ä—è–¥–æ–º:\n".format(user.nowhp, user.hp, user.energy, user.eat, user.location, num)
    minstats = int((user.atk + user.hp) * 0.7)
    maxstats = int((user.atk + user.hp) * 1.3)
    count = 0
    for z in users:
        if z.atk + z.hp >= minstats and z.atk + z.hp <= maxstats:
            if z.frak == '–ì—Ä—è–∑–Ω–æ–µ –Ω–µ–±–æ': frak = 'üåã'
            elif z.frak == '–í–∞–≤–∏–ª–æ–Ω': frak = 'üóº'
            elif z.frak == '–•—Ä–∞–Ω–∏—Ç–µ–ª–∏': frak = 'üí†'
            elif z.frak == '–ù–µ–±–µ—Å–Ω—ã–µ —Ä—ã—Ü–∞—Ä–∏': frak = '‚öîÔ∏è'
            else: frak = "üë§"
            text += "\n[{}]{} - /attack_{}".format(frak, z.username, z.id)
            count += 1
    if count == 0:
        text += "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ä—è–¥–æ–º –Ω–∏–∫–æ–≥–æ –Ω–µ—Ç"
    bot.send_message(m.chat.id, text)

@bot.message_handler(func=lambda m:m.text and m.text.startswith('/attack_'))
def attack_(m):
    if m.chat.id == m.from_user.id:
        pass
    else:
        return
    result = m.text.replace('/attack_', '', 1).replace('@TowerOfHeaven_bot', '', 1)
    player = db.Users.get(user_id=m.from_user.id)
    enemy = db.Users.get(id=result)
    minstats = int((player.atk + player.hp) * 0.7)
    maxstats = int((player.atk + player.hp) * 1.3)
    if int(enemy.atk) + int(enemy.hp) >= int(minstats) and int(enemy.atk) + int(enemy.hp) <= int(maxstats):
        pass
    else:
        bot.send_message(m.chat.id, "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –¥—Ä–∞—Ç—å—Å—è —Å —ç—Ç–∏–º –∏–≥—Ä–æ–∫–æ–º")
        return
    if player.location == enemy.location and player.progLoc == enemy.progLoc:
        bot.send_message(m.chat.id, '_–¢—ã —Ä–µ—à–∏–ª –Ω–∞–∂–∏—Ç—å—Å—è –Ω–∞ —á—É–∂–æ–º —Ä–∞–∑–±–∏—Ç–æ–º —Ö–ª–µ–±–∞–ª–µ. –¢–µ–±–µ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è..._', parse_mode='markdown')
        try:
            bot.send_message(enemy.user_id, "_–ó–∞–∏–≥—Ä–∞–ª–∞ –Ω–∞—Å—Ç–æ—Ä–∞–∂–∏–≤–∞—é—â–∞—è –º—É–∑—ã–∫–∞ –∏ –ø–æ—è–≤–∏–ª–æ—Å—å –æ—â—É—â–µ–Ω–∏–µ, —Å–ª–æ–≤–Ω–æ –∫—Ç–æ-—Ç–æ –≥–æ—Ç–æ–≤–∏—Ç—Å—è –Ω–∞–ø–∞—Å—Ç—å –Ω–∞ —Ç–µ–±—è. –•–º, —á—Ç–æ –±—ã —ç—Ç–æ –º–æ–≥–ª–æ –∑–Ω–∞—á–∏—Ç—å..._", parse_mode='markdown')
        except:
            pass
        loop = asyncio.get_event_loop()
        loop.run_until_complete(pvpbigStart(player, enemy))
    else:
        bot.send_message(m.chat.id, "–ò–≥—Ä–æ–∫ —É–∂–µ –ø–æ–∫–∏–Ω—É–ª —ç—Ç–æ –º–µ—Å—Ç–æ –ª–∏–±–æ –≤—ã —É–∂–µ –ø—Ä–æ—à–ª–∏ –º–∏–º–æ")


async def pvpbigStart(player, enemy):
    await asyncio.sleep(30)
    player = db.Users.get(user_id=player.user_id)
    enemy = db.Users.get(user_id=enemy.user_id)
    if player.user_id == enemy.user_id:
        bot.send_message(player.user_id, "–•–∞—Ä–∞–∫–∏—Ä–∏ - —É–¥–µ–ª —Å–ª–∞–±—ã—Ö")
        return
    if player.location == enemy.location and player.progLoc == enemy.progLoc:
        pass
    else:
        bot.send_message(player.user_id, "_–ñ–µ—Ä—Ç–≤–∞ —Å–∫—Ä—ã–ª–∞—Å—å –∏–∑ –≤–∏–¥—É —Ä–∞–Ω—å—à–µ, —á–µ–º —Ç—ã —É—Å–ø–µ–ª –Ω–∞ –Ω–µ–≥–æ –Ω–∞–ø–∞—Å—Ç—å._", parse_mode='markdown')
        return
    player1 = db.Users.get(user_id=player.user_id)
    player2 = db.Users.get(user_id=enemy.user_id)
    FATK = random.randint(0, 100)
    playerArmor = int(player1.armor / 5)
    enemyArmor = int(player2.armor / 5)
    player = {'username': player1.username, 'armor': playerArmor, 'atk': player1.atk, 'hp': player1.nowhp, 'user_id': player1.user_id}
    enemy = {'username': player2.username, 'armor': enemyArmor, 'atk': player2.atk, 'hp': player2.nowhp, 'user_id': player2.user_id}
    bot.send_message(enemy['user_id'], "üë§{} VS üë§{}\n\n\n".format(player['username'], enemy['username']))
    bot.send_message(player['user_id'], "üë§{} VS üë§{}\n\n\n".format(player['username'], enemy['username']))
    minPlayerAtk = int(player['atk'] * 0.4)
    maxPlayerAtk = int(player['atk'] * 0.75)
    minEnemyAtk = int(enemy['atk'] * 0.4)
    maxEnemyAtk = int(enemy['atk'] * 0.75)
    if FATK >= 50:
        pAtk = random.randint(minPlayerAtk, maxPlayerAtk)
        if pAtk < enemy['armor']:
            eArmor = pAtk - 1
        else:
            eArmor = enemyArmor
        playerAtk = pAtk - eArmor
        step = 1
        enemy['hp'] = enemy['hp'] - playerAtk
        textPlayer = "üë§{} –Ω–∞–Ω–µ—Å —É–¥–∞—Ä {}üí• (üõ°{})".format(player['username'], pAtk, eArmor)
        textEnemy = "üë§{} –Ω–∞–Ω–µ—Å —É–¥–∞—Ä {}üí• (üõ°{})".format(player['username'], pAtk, eArmor)
    else:
        eAtk = random.randint(minEnemyAtk, maxEnemyAtk)
        if eAtk < player['armor']:
            pArmor = eAtk - 1        
        else:
            pArmor = playerArmor
        enemyAtk = eAtk - pArmor
        step = 2
        player['hp'] = player['hp'] - enemyAtk
        textEnemy = "üë§{} –Ω–∞–Ω–µ—Å —É–¥–∞—Ä {}üí• (üõ°{})".format(enemy['username'], eAtk, pArmor)
        textPlayer = "üë§{} –Ω–∞–Ω–µ—Å —É–¥–∞—Ä {}üí• (üõ°{})".format(enemy['username'], eAtk, pArmor)
    while player['hp'] > 0 and enemy['hp'] > 0:
        step += 1
        pAtk = random.randint(minPlayerAtk, maxPlayerAtk) 
        if pAtk < enemy['armor']:
            eArmor = pAtk - 1
        else:
            eArmor = enemyArmor
        playerAtk = pAtk - eArmor
        eAtk = random.randint(minEnemyAtk, maxEnemyAtk) 
        if eAtk < player['armor']:
            pArmor = pAtk - 1
        else:
            pArmor = playerArmor
        enemyAtk = eAtk - pArmor
        if step/2 == step//2: #–ê—Ç–∞–∫–∞ enemy
            player['hp'] = player['hp'] - enemyAtk
            if player['hp'] < 0:
                player['hp'] = 0
            textEnemy += "\nüë§{} –Ω–∞–Ω–µ—Å —É–¥–∞—Ä {}üí• (üõ°{})".format(enemy['username'], str(eAtk), pArmor)
            textPlayer += "\nüë§{} –Ω–∞–Ω–µ—Å —É–¥–∞—Ä {}üí• (üõ°{})".format(enemy['username'], str(eAtk), pArmor)
        else: #–ê—Ç–∞–∫–∞ player
            enemy['hp'] = enemy['hp'] - playerAtk
            if enemy['hp'] < 0:
                enemy['hp'] = 0
            textPlayer += "\nüë§{} –Ω–∞–Ω–µ—Å —É–¥–∞—Ä {}üí•(üõ°{})".format(player['username'], str(pAtk), eArmor)
            textEnemy += "\nüë§{} –Ω–∞–Ω–µ—Å —É–¥–∞—Ä {}üí•(üõ°{})".format(player['username'], str(pAtk), eArmor)
    if player['hp'] <= 0:
        mi = int(player1.money * 0.1)
        ma = int(player1.money * 0.25)
        goldAward = random.randint(mi, ma)
        textPlayer += "\n\n_–¢–µ–±—è –∑–Ω–∞—Ç–Ω–æ –ø–æ—Ç—Ä–µ–ø–∞–ª–∏, –Ω–æ –Ω–µ –¥–æ —Å–º–µ—Ä—Ç–∏. –ú–µ—Å—Ç–Ω—ã–µ –æ—Ç—Ç–∞—â–∏–ª–∏ —Ç–≤–æ—ë —Ç–µ–ª–æ –≤ –≥–æ—Ä–æ–¥._\n\n–ü–æ—Ç–µ—Ä—è–Ω–æ: {}üí∞".format(int(goldAward))
        textEnemy += "\n\n_–¢—ã –≤—ã—à–µ–ª –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–º –∏–∑ —ç—Ç–æ–π —Å—Ö–≤–∞—Ç–∫–∏, –∑–∞–æ–¥–Ω–æ –æ–±—à–∞—Ä–∏–ª –∫–∞—Ä–º–∞–Ω—ã –ø—Ä–æ–∏–≥—Ä–∞–≤—à–µ–≥–æ._\n\n–ü–æ–ª—É—á–µ–Ω–æ: {}üí∞".format(int(goldAward))
        player1.location = "–•—ç–≤–µ–Ω–±—É—Ä–≥"
        player1.position = "–ù–æ–º–µ—Ä –≤ –æ—Ç–µ–ª–µ"
        player1.nowhp = random.randint(1, 10)
        player1.money -= goldAward
        player2.money += goldAward
        player2.nowhp = enemy['hp']
    else:
        mi = int(player2.money * 0.1)
        ma = int(player2.money * 0.25)
        goldAward = random.randint(mi, ma)
        textEnemy += "\n\n_–¢–µ–±—è –∑–Ω–∞—Ç–Ω–æ –ø–æ—Ç—Ä–µ–ø–∞–ª–∏, –Ω–æ –Ω–µ –¥–æ —Å–º–µ—Ä—Ç–∏. –ú–µ—Å—Ç–Ω—ã–µ –æ—Ç—Ç–∞—â–∏–ª–∏ —Ç–≤–æ—ë —Ç–µ–ª–æ –≤ –≥–æ—Ä–æ–¥._\n\n–ü–æ—Ç–µ—Ä—è–Ω–æ: {}üí∞".format(int(goldAward))
        textPlayer += "\n\n_–¢—ã –≤—ã—à–µ–ª –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–º –∏–∑ —ç—Ç–æ–π —Å—Ö–≤–∞—Ç–∫–∏, –∑–∞–æ–¥–Ω–æ –æ–±—à–∞—Ä–∏–ª –∫–∞—Ä–º–∞–Ω—ã –ø—Ä–æ–∏–≥—Ä–∞–≤—à–µ–≥–æ._\n\n–ü–æ–ª—É—á–µ–Ω–æ: {}üí∞".format(int(goldAward))
        player2.location = "–•—ç–≤–µ–Ω–±—É—Ä–≥"
        player2.position = "–ù–æ–º–µ—Ä –≤ –æ—Ç–µ–ª–µ"
        player2.nowhp = random.randint(1, 10)
        player2.money -= goldAward
        player1.money += goldAward
        player1.nowhp = player['hp']
    player1.save()
    player2.save()
    bot.send_message(player['user_id'], textPlayer, parse_mode = 'markdown')
    bot.send_message(enemy['user_id'], textEnemy, parse_mode = 'markdown')


@bot.callback_query_handler(func=lambda call: call.data.startswith('navgo'))
def navgo(call): 
    if (call.from_user.id == call.message.chat.id):
        pass
    else:
        return
    user = db.Users.get(user_id=call.from_user.id)
    user.progStatus = 1
    user.save()
    gg = bot.edit_message_text("–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏—Å—å –≤ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –¥–∞–ª—å—à–µ.", call.message.chat.id, call.message.message_id)



@bot.callback_query_handler(func=lambda call: call.data.startswith('dunjgo_'))
def dunjgo(call): 
    if (call.from_user.id == call.message.chat.id):
        pass
    else:
        return
    _kach = call.data.split('_')
    kach = _kach[1]
    user = db.Users.get(user_id=call.from_user.id)
    if kach == 'grob':
        if user.location == '–°–ª—É—á–∞–π–Ω—ã–π –ª–µ—Å' and user.progLoc == '–°–ª—É—á–∞–π–Ω—ã–π –ª–µ—Å|35':
            user.location = '–õ–µ—Å–Ω–∞—è –≥—Ä–æ–±–Ω–∏—Ü–∞'
            user.progLoc = '–õ–µ—Å–Ω–∞—è –≥—Ä–æ–±–Ω–∏—Ü–∞|1'
            user.progStatus = 1
            text = "–í—ã –Ω–∞–ø—Ä–∞–≤–∏–ª–∏—Å—å –≤ –ª–µ—Å–Ω—É—é –≥—Ä–æ–±–Ω–∏—Ü—É"
            user.save()
        else:
            text = "–í—ã —É–∂–µ –ø—Ä–æ—à–ª–∏ —Ä–∞–∑–≤–∏–ª–∫—É"
    gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id)

