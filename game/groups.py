def grouppanel(m):
    user = db.Users.get(user_id=m.from_user.id)
    if user.frak == '–ì—Ä—è–∑–Ω–æ–µ –Ω–µ–±–æ': frakname = 'üåã–ì—Ä—è–∑–Ω–æ–µ –Ω–µ–±–æ'
    elif user.frak == '–í–∞–≤–∏–ª–æ–Ω': frakname = 'üóº–í–∞–≤–∏–ª–æ–Ω'
    elif user.frak == '–•—Ä–∞–Ω–∏—Ç–µ–ª–∏': frakname = 'üí†–•—Ä–∞–Ω–∏—Ç–µ–ª–∏'
    elif user.frak == '–ù–µ–±–µ—Å–Ω—ã–µ —Ä—ã—Ü–∞—Ä–∏': frakname = '‚öîÔ∏è–ù–µ–±–µ—Å–Ω—ã–µ —Ä—ã—Ü–∞—Ä–∏'
    else: return
    fraka = str(user.frak)
    frak = db.Fraks.get(name=fraka)
    needExp = frak.lvl * 1000
    leader = db.Users.get(id=frak.leader)
    markup = InlineKeyboardMarkup()
    markup.row_width = 2
    text = "{}\nüèÜ{}üèÜ\n\n‚ú≥Ô∏è–£—Ä–æ–≤–µ–Ω—å: {}\n‚ùáÔ∏è–û–ø—ã—Ç: {}/{}\nüí∞–§–æ–Ω–¥: {}\nüë•–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {}\n\n\nüü£{}\nüî¥{}\nüü¢{}\nüîµ{}".format(frakname, leader.username, frak.lvl, frak.exp, needExp, frak.fond, frak.players, frak.ametist, frak.rubin, frak.izumrud, frak.sapphire)
#    if leader.id == user.id:
#        markup.add(InlineKeyboardButton('–ü–∞–Ω–µ–ª—å –æ—Å–Ω–æ–≤–∞—Ç–µ–ª—è', callback_data="fraka_panel"))
    markup.add(InlineKeyboardButton('–í–∑–Ω–æ—Å –≤ —Ñ–æ–Ω–¥', callback_data="fraka_pay"))
    checkNav = db.System.get(name='nav_fraka')
    if checkNav.value == 1:
        markup.add(InlineKeyboardButton('–ü–æ—Ö–æ–¥ –∫ –±–∞—à–Ω–µ', callback_data="fraka_nav"))
    bot.reply_to(m, text, reply_markup=markup)



@bot.callback_query_handler(func=lambda call: call.data.startswith('fraka_'))
def fraka(call): 
    if (call.from_user.id == call.message.chat.id):
        pass
    else:
        return
    user = db.Users.get(user_id=call.from_user.id)
    fraka = db.Fraks.get(name=user.frak)
    nav = call.data.split('_')
    navWhere = nav[1]
    if navWhere == "pay":
        try:
            summPay = nav[2]
            if user.money >= int(summPay):
                user.money -= int(summPay)
                fraka.fond += int(summPay)
                user.save()
                fraka.save()
                text = "–í—ã —É—Å–ø–µ—à–Ω–æ –≤–Ω–µ—Å–ª–∏ {}üí∞ –≤ —Ñ–æ–Ω–¥".format(summPay)
            else:
                text = "–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥ –¥–ª—è –≤–∑–Ω–æ—Å–∞"
            gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id, parse_mode = 'markdown')
        except:
            markup = InlineKeyboardMarkup()
            markup.row_width = 2
            markup.add(InlineKeyboardButton('100üí∞', callback_data="fraka_pay_100"))
            markup.add(InlineKeyboardButton('200üí∞', callback_data="fraka_pay_200"))
            markup.add(InlineKeyboardButton('500üí∞', callback_data="fraka_pay_500"))
            markup.add(InlineKeyboardButton('1000üí∞', callback_data="fraka_pay_1000"))
            gg = bot.edit_message_text("–í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –≤–∫–ª–∞–¥–∞ –≤ —Ñ–æ–Ω–¥ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏", call.message.chat.id, call.message.message_id, reply_markup=markup)
    elif navWhere == "nav":
        if user.location not in ['–¢—Ä–æ–ø–∞ –∫ –±–∞—à–Ω–µ', '–ë–∞—à–Ω—è', '–ü–µ—Ä–≤—ã–π —ç—Ç–∞–∂ –±–∞—à–Ω–∏', '–í—Ç–æ—Ä–æ–π —ç—Ç–∞–∂ –±–∞—à–Ω–∏', '–¢—Ä–µ—Ç–∏–π —ç—Ç–∞–∂ –±–∞—à–Ω–∏', '–ß–µ—Ç–≤—ë—Ä—Ç—ã–π —ç—Ç–∞–∂ –±–∞—à–Ω–∏', '–ü—è—Ç—ã–π —ç—Ç–∞–∂ –±–∞—à–Ω–∏']:
            pass
        else:
            gg = bot.edit_message_text("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è —Ç—É–¥–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ.", call.message.chat.id, call.message.message_id)
            return
        checkNav = db.System.get(name='nav_fraka')
        if checkNav.value == 1:
            user.location = "–¢—Ä–æ–ø–∞ –∫ –±–∞—à–Ω–µ"
            user.progLoc = "–¢—Ä–æ–ø–∞ –∫ –±–∞—à–Ω–µ|0"
            user.progStatus = 1
            user.save()
            gg = bot.edit_message_text("–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏—Å—å –∫ –±–∞—à–Ω–µ", call.message.chat.id, call.message.message_id)
        else:
            gg = bot.edit_message_text("–°–µ–π—á–∞—Å —Ç–∞–º –¥–µ–ª–∞—Ç—å –Ω–µ—á–µ–≥–æ", call.message.chat.id, call.message.message_id)





@bot.callback_query_handler(func=lambda call: call.data.startswith('tower_'))
def tower_(call): 
    if (call.from_user.id == call.message.chat.id):
        pass
    else:
        return
    print(call.data)
    user = db.Users.get(user_id=call.from_user.id)
    nav = call.data.split('_')
    navWhere = nav[1]
    if navWhere == "2":
        if user.location == '–ü–µ—Ä–≤—ã–π —ç—Ç–∞–∂ –±–∞—à–Ω–∏' and user.progLoc == '–ü–µ—Ä–≤—ã–π —ç—Ç–∞–∂ –±–∞—à–Ω–∏|5' and user.nowhp > 0:
            user.location = '–í—Ç–æ—Ä–æ–π —ç—Ç–∞–∂ –±–∞—à–Ω–∏'
            user.progLoc = '–í—Ç–æ—Ä–æ–π —ç—Ç–∞–∂ –±–∞—à–Ω–∏|0'
            user.progStatus = 1
            text = "–í—ã –ø–µ—Ä–µ—à–ª–∏ –Ω–∞ –≤—Ç–æ—Ä–æ–π —ç—Ç–∞–∂ –±–∞—à–Ω–∏"
            gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id)
    elif navWhere == "3":
        if user.location == '–í—Ç–æ—Ä–æ–π —ç—Ç–∞–∂ –±–∞—à–Ω–∏' and user.progLoc == '–í—Ç–æ—Ä–æ–π —ç—Ç–∞–∂ –±–∞—à–Ω–∏|7' and user.nowhp > 0:
            user.location = '–¢—Ä–µ—Ç–∏–π —ç—Ç–∞–∂ –±–∞—à–Ω–∏'
            user.progLoc = '–¢—Ä–µ—Ç–∏–π —ç—Ç–∞–∂ –±–∞—à–Ω–∏|0'
            user.progStatus = 1
            text = "–í—ã –ø–µ—Ä–µ—à–ª–∏ –Ω–∞ —Ç—Ä–µ—Ç–∏–π —ç—Ç–∞–∂ –±–∞—à–Ω–∏"
            gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id)
    elif navWhere == "4":
        if user.location == '–¢—Ä–µ—Ç–∏–π —ç—Ç–∞–∂ –±–∞—à–Ω–∏' and user.progLoc == '–¢—Ä–µ—Ç–∏–π —ç—Ç–∞–∂ –±–∞—à–Ω–∏|9' and user.nowhp > 0:
            user.location = '–ß–µ—Ç–≤—ë—Ä—Ç—ã–π —ç—Ç–∞–∂ –±–∞—à–Ω–∏'
            user.progLoc = '–ß–µ—Ç–≤—ë—Ä—Ç—ã–π —ç—Ç–∞–∂ –±–∞—à–Ω–∏|0'
            user.progStatus = 1
            text = "–í—ã –ø–µ—Ä–µ—à–ª–∏ –Ω–∞ —á–µ—Ç–≤—ë—Ä—Ç—ã–π —ç—Ç–∞–∂ –±–∞—à–Ω–∏"
            gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id)
    elif navWhere == "5":
        if user.location == '–ß–µ—Ç–≤—ë—Ä—Ç—ã–π —ç—Ç–∞–∂ –±–∞—à–Ω–∏' and user.progLoc == '–ß–µ—Ç–≤—ë—Ä—Ç—ã–π —ç—Ç–∞–∂ –±–∞—à–Ω–∏|11' and user.nowhp > 0:
            user.location = '–ü—è—Ç—ã–π —ç—Ç–∞–∂ –±–∞—à–Ω–∏'
            user.progLoc = '–ü—è—Ç—ã–π —ç—Ç–∞–∂ –±–∞—à–Ω–∏|0'
            user.progStatus = 1
            text = "–í—ã –ø–µ—Ä–µ—à–ª–∏ –Ω–∞ –ø—è—Ç—ã–π —ç—Ç–∞–∂ –±–∞—à–Ω–∏"
            gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id)
    elif navWhere == "6":
        if user.location == '–ü—è—Ç—ã–π —ç—Ç–∞–∂ –±–∞—à–Ω–∏' and user.progLoc == '–ü—è—Ç—ã–π —ç—Ç–∞–∂ –±–∞—à–Ω–∏|13' and user.nowhp > 0:
            user.location = '–®–µ—Å—Ç–æ–π —ç—Ç–∞–∂ –±–∞—à–Ω–∏'
            user.progLoc = '–®–µ—Å—Ç–æ–π —ç—Ç–∞–∂ –±–∞—à–Ω–∏|0'
            user.progStatus = 1
            text = "–í—ã –ø–µ—Ä–µ—à–ª–∏ –Ω–∞ —à–µ—Å—Ç–æ–π —ç—Ç–∞–∂ –±–∞—à–Ω–∏"
            gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id)
    else:
        text = "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ /report"
        gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id)
    user.save()
