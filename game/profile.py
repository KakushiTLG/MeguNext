def profile(m):
    user = db.Users.get(user_id=m.from_user.id)
    if user:
        markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
        item1 = types.KeyboardButton('–ü—Ä–æ—Ñ–∏–ª—å')
        item2 = types.KeyboardButton('–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å')
        item4 = types.KeyboardButton('–ù–∞–≤–∏–≥–∞—Ü–∏—è')
        if user.frak:
            item5 = types.KeyboardButton('–ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞')
            markup.row(item1, item2)
            markup.row(item4, item5)
        else:
            markup.row(item1, item2)
            markup.row(item4)
        _itemAtk = user.lvl / 100
        if user.item == "–ü–∏—Å—Ç–æ–ª–µ—Ç —Å –Ω–æ–∂–æ–º":
            playerAtk = int(user.atk * 0.3)
        elif user.item == "–ö–æ–ø—å—ë":
            playerAtk = int(user.atk * 0.4)
        else:
            itemAtk = 1 + _itemAtk
            playerAtk = int(int(user.atk * itemAtk) - user.atk)
        needexp = user.lvl * 100
        if user.frak == '–ì—Ä—è–∑–Ω–æ–µ –Ω–µ–±–æ': text = "üåã[{}](tg://user?id={})\n".format(user.username, user.user_id)
        elif user.frak == '–í–∞–≤–∏–ª–æ–Ω': text = "üóº[{}](tg://user?id={})\n".format(user.username, user.user_id)
        elif user.frak == '–•—Ä–∞–Ω–∏—Ç–µ–ª–∏': text = "üí†[{}](tg://user?id={})\n".format(user.username, user.user_id)
        elif user.frak == '–ù–µ–±–µ—Å–Ω—ã–µ —Ä—ã—Ü–∞—Ä–∏': text = "‚öîÔ∏è[{}](tg://user?id={})\n".format(user.username, user.user_id)
        else: text = "üë§[{}](tg://user?id={})\n".format(user.username, user.user_id)
        if user.location == '–ì–æ—Ä–æ–¥':
            text += "üì°*{}*üè™*{}*\n".format(user.location, user.position)
        elif user.location == '–•—ç–≤–µ–Ω–±—É—Ä–≥':
            text += "üì°*{}*üè™*{}*\n".format(user.location, user.position)
        else:
            text += "üì°*{}*\n".format(user.location)
        text += "üîÜ{} (‚ú®*{}/{}*)\n\n".format(user.lvl, user.exp, needexp)
        text += "‚ù§Ô∏è{}/{} üõ°{}\n".format(user.nowhp, user.hp, user.armor)
        text += "üî™{}(+{})\n".format(user.atk, int(playerAtk))
        text += "‚ö°Ô∏è{}/100 üçó{}/100\n\n".format(user.energy, user.eat)
        text += "üí∞{} üíé{}\n".format(user.money, user.almaz)
        text += "üó°–≠–∫–∏–ø–∏—Ä–æ–≤–∞–Ω–æ: {}\n\n".format(user.item)
        text += "ü§ù{} ‚≠êÔ∏è{}/5\n\n".format(user.tradecount, user.tradenum)
        text += "üÜî - {}".format(user.id)
        if user.ban != 0 and user.ban != 2:
            text += "\n‚õîÔ∏è*BANNED*‚õîÔ∏è"
        bot.send_message(m.chat.id, text, parse_mode='markdown', reply_markup=markup)

#################
#   INVENTORY   #
#################
pechene = ['–ó–∞–ø–∏—Å–∫–∞ –∏–∑ –ø–µ—á–µ–Ω—å—è –≥–ª–∞—Å–∏—Ç: _–í–∞—à–∞ —É–ª—ã–±–∫–∞ –æ–±–ª–∞–¥–∞–µ—Ç –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ–π —Å–∏–ª–æ–π.\n–û—Ç–ø—É–≥–∏–≤–∞—Ç—å –æ–∫—Ä—É–∂–∞—é—â–∏—Ö._', '–ó–∞–ø–∏—Å–∫–∞ –∏–∑ –ø–µ—á–µ–Ω—å—è –≥–ª–∞—Å–∏—Ç: _–¢—Ä–∏–∂–¥—ã —Ö–ª–æ–ø–Ω–∏, –ø—Ä–æ—à–µ–ø—á–∏ "–ù–∞—Ç—É—Ä–∞–ª", –ø–æ—Ç—Ä—è—Å–∏ –ø—Ä–∞–≤–æ–π —Ä—É–∫–æ–π, –∞ —Ç–µ–ø–µ—Ä—å –ø—Ä–æ–≤–µ—Ä—å —Å–≤–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å._', '–ó–∞–ø–∏—Å–∫–∞ –∏–∑ –ø–µ—á–µ–Ω—å—è –≥–ª–∞—Å–∏—Ç: _–°–µ–≥–æ–¥–Ω—è –≤–∞–º –º–æ–∂–µ—Ç –ø–æ–≤–µ–∑—Ç–∏. –ê –º–æ–∂–µ—Ç –∏ –Ω–µ –ø–æ–≤–µ–∑—Ç–∏_\n¬Ø\_(„ÉÑ)_/¬Ø',
    '–ó–∞–ø–∏—Å–∫–∞ –∏–∑ –ø–µ—á–µ–Ω—å—è –≥–ª–∞—Å–∏—Ç: _–û–ù–ò –î–ï–†–ñ–ê–¢ –ú–ï–ù–Ø –í –ó–ê–õ–û–ñ–ù–ò–ö–ê–• –ò –ó–ê–°–¢–ê–í–õ–Ø–Æ–¢ –ü–û–°–¢–û–Ø–ù–ù–û –ü–†–ò–î–£–ú–´–í–ê–¢–¨ –¢–ï–ö–°–¢–´ –î–õ–Ø –≠–¢–û–ì–û –ü–ï–ß–ï–ù–¨–Ø, –ü–û–ú–û–ì–ò–¢–ï!_', '–ó–∞–ø–∏—Å–∫–∞ –∏–∑ –ø–µ—á–µ–Ω—å—è –≥–ª–∞—Å–∏—Ç: _–ù–µ –≥–Ω–µ–≤–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞, –æ–Ω –º–æ–∂–µ—Ç –∑–∞—Å—É–Ω—É—Ç—å —Ç–µ–±–µ —Ö–µ—Ä –æ–≥—Ä–∞ –≤ —Ç–∞–∫–∏–µ –º–µ—Å—Ç–∞, –æ –∫–æ—Ç–æ—Ä—ã—Ö —Ç—ã –∏ –Ω–µ –¥–æ–≥–∞–¥—ã–≤–∞–ª—Å—è._', '–ó–∞–ø–∏—Å–∫–∞ –∏–∑ –ø–µ—á–µ–Ω—å—è –≥–ª–∞—Å–∏—Ç: _–ù–∞ —Ç–µ–±—è —Å–µ–≥–æ–¥–Ω—è —É–ø–∞–¥—ë—Ç –ø–∏–∞–Ω–∏–Ω–æ, –±—É–¥—å –æ—Å—Ç–æ—Ä–æ–∂–µ–Ω._',
    '–ó–∞–ø–∏—Å–∫–∞ –∏–∑ –ø–µ—á–µ–Ω—å—è –≥–ª–∞—Å–∏—Ç: _–ó–î–û–•–ù–ï–®!_', '–ó–∞–ø–∏—Å–∫–∞ –∏–∑ –ø–µ—á–µ–Ω—å—è –≥–ª–∞—Å–∏—Ç: _–ó–≤—ë–∑–¥—ã –≥–æ–≤–æ—Ä—è—Ç... –ö–æ–∑–µ—Ä–æ–≥–∞ –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ –∂–¥—ë—Ç —É—Å–ø–µ—Ö –∏ –ø—Ä–æ—Ü–≤–µ—Ç–∞–Ω–∏–µ._', '–ó–∞–ø–∏—Å–∫–∞ –∏–∑ –ø–µ—á–µ–Ω—å—è –≥–ª–∞—Å–∏—Ç: _–ë–∏–ø. –ë—Ä–æ—Å—å—Ç–µ –º–æ–Ω–µ—Ç–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ. –ë—É–ø._', '–ó–∞–ø–∏—Å–∫–∞ –∏–∑ –ø–µ—á–µ–Ω—å—è –≥–ª–∞—Å–∏—Ç: _–ì–µ—Ä–æ–π, —Å—É–¥—å–±–∞ —Ç–≤–æ—è —Ç—Ä—É–¥–Ω–∞. –ù–∞ —Ç–≤–æ—ë–º –ø—É—Ç–∏ –∫ —Å—á–∞—Å—Ç—å—é –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è –±—É–¥—É—Ç –ø–æ—è–≤–ª—è—Ç—å—Å—è –æ–¥–Ω–æ –∑–∞ –¥—Ä—É–≥–∏–º... –ù–æ, –≤ –∫–æ–Ω—Ü–µ –∫–æ–Ω—Ü–æ–≤, —Ç—ã –æ–±—Ä–µ—Ç—ë—à—å —Ç–æ, —á–µ–≥–æ –≤—Å–µ–≥–¥–∞ –∂–µ–ª–∞–ª, –≥–µ—Ä–æ–π._',
    '–ó–∞–ø–∏—Å–∫–∞ –∏–∑ –ø–µ—á–µ–Ω—å—è –≥–ª–∞—Å–∏—Ç: _–ò –≤—Å—ë –ø–æ–≥–ª–æ—Ç–∏—Ç –ø–ª–∞–º—è._', '–ó–∞–ø–∏—Å–∫–∞ –∏–∑ –ø–µ—á–µ–Ω—å—è –≥–ª–∞—Å–∏—Ç: _\n–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å 1 –∫–≥ \n–ú–∞—Å–ª–æ —Å–ª–∏–≤–æ—á–Ω–æ–µ \n–ö–µ—Ç—á—É–ø \n–ú–∞–∫–∞—Ä–æ–Ω—ã \n–Ø–π—Ü–∞_', '–ó–∞–ø–∏—Å–∫–∞ –∏–∑ –ø–µ—á–µ–Ω—å—è –≥–ª–∞—Å–∏—Ç: _–ò–≥—Ä—ã –∫–æ–Ω—á–∏–ª–∏—Å—å, —É —Ç–µ–±—è 24 —á–∞—Å–∞ —á—Ç–æ–±—ã –ø–æ–≥–∞—Å–∏—Ç—å –¥–æ–ª–≥. –£ –Ω–∞—Å —Ç–≤–æ–∏ –±–ª–∏–∑–∫–∏–µ –∏ –ª—É—á—à–µ —Ç–µ–±–µ –ø–æ—Ç–æ—Ä–æ–ø–∏—Ç—å—Å—è, –ø–æ–∫–∞ —Å –Ω–∏–º–∏ –Ω–µ —Å–ª—É—á–∏–ª–æ—Å—å —á–µ–≥–æ-—Ç–æ._',
    '–ó–∞–ø–∏—Å–∫–∞ –∏–∑ –ø–µ—á–µ–Ω—å—è –≥–ª–∞—Å–∏—Ç: _–ü—Ä–æ—Å–Ω–∏—Ç–µ—Å—å –∏ –ø–æ–π—Ç–µ, –ø—Ä–æ—Å–Ω–∏—Ç–µ—Å—å –∏ –ø–æ–π—Ç–µ._', '–ó–∞–ø–∏—Å–∫–∞ –∏–∑ –ø–µ—á–µ–Ω—å—è –≥–ª–∞—Å–∏—Ç: _–û—Ç–¥–∞–π –¥–µ–≤—á–æ–Ω–∫—É –∏ –¥–æ–ª–≥ –±—É–¥–µ—Ç –ø—Ä–æ—â–µ–Ω._', '–ó–∞–ø–∏—Å–∫–∞ –∏–∑ –ø–µ—á–µ–Ω—å—è –≥–ª–∞—Å–∏—Ç: _–°–≤–∞–ª–∫–∞ —Ç–∞–∏—Ç –≤ —Å–µ–±–µ –∫—É–¥–∞ –±–æ–ª–µ–µ —Ü–µ–Ω–Ω—ã–µ —Å–∫–æ—Ä–æ–≤–∏—â–∞, —á–µ–º –∫–∞–∂–µ—Ç—Å—è –Ω–∞ –ø–µ—Ä–≤—ã–π –≤–∑–≥–ª—è–¥._',
    '–ó–∞–ø–∏—Å–∫–∞ –∏–∑ –ø–µ—á–µ–Ω—å—è –≥–ª–∞—Å–∏—Ç: _–í —ç—Ç–æ–º –ø–µ—á–µ–Ω—å–µ –±—ã–ª –æ—á–µ–Ω—å —Å–∏–ª—å–Ω—ã–π —è–¥, –∫–æ—Ç–æ—Ä—ã–π —á–µ—Ä–µ–∑ —Ç—Ä–∏ –¥–Ω—è –∑–∞—Å—Ç–∞–≤–∏—Ç —Ç–≤–æ–∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –ø–ª–∞–≤–∏—Ç—å—Å—è, –∫–æ–∂—É –æ–±–ª–∞–∑–∏—Ç—å, –∞ –∫–æ—Å—Ç–∏ –ª–æ–º–∞—Ç—å—Å—è –ø–æ–¥ –º–∞–ª–µ–π—à–µ–π –Ω–∞–≥—Ä—É–∑–∫–æ–π. –ü–æ–ª–æ–∂–∏ 900 –∑–æ–ª–æ—Ç–∞ –≤–æ–∑–ª–µ –∫–∞–º–Ω—è —Å–ª–µ–≤–∞ –æ—Ç —Ç–µ–±—è –∏ –º—ã –æ—Ç–¥–∞–¥–∏–º —Ç–µ–±–µ –∞–Ω—Ç–∏–¥–æ—Ç. –¢—ã –∫–æ–Ω–µ—á–Ω–æ –º–æ–∂–µ—à—å –∏ –Ω–µ –≤–µ—Ä–∏—Ç—å, –Ω–æ –∫—Ç–æ –∑–Ω–∞–µ—Ç, —á–µ–º –≤—Å–µ —ç—Ç–æ –æ–±–µ—Ä–Ω—ë—Ç—Å—è._',
    '–ó–∞–ø–∏—Å–∫–∞ –∏–∑ –ø–µ—á–µ–Ω—å—è –≥–ª–∞—Å–∏—Ç: _–ü–æ—Ä–æ–π –Ω—É–∂–Ω–æ –æ—Ç–¥–∞–≤–∞—Ç—å, –Ω–µ –æ–∂–∏–¥–∞—è –ø–æ–ª—É—á–∏—Ç—å —á—Ç–æ-—Ç–æ –≤–∑–∞–º–µ–Ω._', 
    '–ó–∞–ø–∏—Å–∫–∞ –∏–∑ –ø–µ—á–µ–Ω—å—è –≥–ª–∞—Å–∏—Ç: _–ï—Å–ª–∏ –ø–æ—è–≤–∏—Ç—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å - –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –µ—é._', '–ó–∞–ø–∏—Å–∫–∞ –∏–∑ –ø–µ—á–µ–Ω—å—è –≥–ª–∞—Å–∏—Ç: _–í –ª—é–±–æ–π –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏ –∑–∞–∫—É–ø–∞–π—Å—è —Å–≤–∏—Ç–∫–∞–º–∏ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏._', '–ó–∞–ø–∏—Å–∫–∞ –∏–∑ –ø–µ—á–µ–Ω—å—è –≥–ª–∞—Å–∏—Ç: _–ú—ã —É–∑–Ω–∞–ª–∏ —Ç–≤–æ—ë –Ω–∞—Å—Ç–æ—è—â–µ–µ –∏–º—è! –¢–µ–±–µ –Ω–µ —É–π—Ç–∏_']

def inventory(m):
    user = db.Users.get(user_id=m.from_user.id)
    inventory = db.Inventory.select().where(db.Inventory.idplayer == user.id, db.Inventory.active== 1)
    inventorySize = db.getInventorySize(user)
    count = {}
    size1 = {}
    text = "üéí*–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å* (üì¶{}/{})\n".format(inventorySize, user.inventorySizeMax)
    markup = InlineKeyboardMarkup()
    markup.row_width = 2
    for item in inventory:
        if item.name in count:
            name, size, bonus = db.items(item.name, check=True)
            count[item.name] += 1
            size1[item.name] = size1[item.name] + int(size)
        else:
            name, size, bonus = db.items(item.name, check=True)
            count[item.name] = 1
            size1[item.name] = int(size)
            markup.add(InlineKeyboardButton('{}'.format(str(name)), callback_data="invUse_{}".format(str(item.id))))
    for dict in count:
        name, size, bonus = db.items(dict, check=True)
        text += "\n—Ö{} {} üì¶{}".format(count[dict], name, size1[dict])
    check_a = db.Inventory.get(active=2, idplayer=user.id)
    if check_a:
        markup.add(InlineKeyboardButton('–°–Ω–∞—Ä—è–∂–µ–Ω–∏–µ', callback_data="armorpers"))
    bot.send_message(m.chat.id, text, parse_mode='markdown', reply_markup=markup)



@bot.callback_query_handler(func=lambda call: call.data.startswith('invUse_'))
def invUse(call): 
    if (call.from_user.id == call.message.chat.id):
        pass
    else:
        return
    do = call.data.split('_')
    use = do[1]
    markup = InlineKeyboardMarkup()
    markup.row_width = 2
    result = db.Inventory.get(id=use)
    if result.type == '–ï–¥–∞':
        text = "{}\n+ü¶¥{}—Å—ã—Ç–æ—Å—Ç–∏.\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?".format(str(result.name), str(result.bonus))
        markup.add(InlineKeyboardButton('–°—ä–µ—Å—Ç—å'.format(str(result.name)), callback_data="invUsing_{}".format(str(use))))
        markup.add(InlineKeyboardButton('–í—ã–±—Ä–æ—Å–∏—Ç—å', callback_data="invDrop_{}".format(str(use))))
        markup.add(InlineKeyboardButton('–í –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å', callback_data="inveClose"))
    elif result.type == "–•–ª–∞–º":
        text = "{}. \n–°—É–¥—è –ø–æ –≤—Å–µ–º—É, —Ö–ª–∞–º.".format(str(result.name))
        markup.add(InlineKeyboardButton('–í—ã–±—Ä–æ—Å–∏—Ç—å', callback_data="invDrop_{}".format(str(use))))
        markup.add(InlineKeyboardButton('–í –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å', callback_data="inveClose"))
    elif result.type == "–ó–µ–ª—å–µ":
        text = "{}. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?".format(result.name)
        markup.add(InlineKeyboardButton('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å'.format(str(result.name)), callback_data="invUsing_{}".format(str(use))))
        markup.add(InlineKeyboardButton('–í—ã–±—Ä–æ—Å–∏—Ç—å', callback_data="invDrop_{}".format(str(use))))
        markup.add(InlineKeyboardButton('–í –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å', callback_data="inveClose"))
    elif result.type == "–°—É–Ω–¥—É–∫":
        text = "{}. –û—Ç–∫—Ä—ã—Ç—å?".format(result.name)
        markup.add(InlineKeyboardButton('–û—Ç–∫—Ä—ã—Ç—å'.format(str(result.name)), callback_data="invUsing_{}".format(str(use))))
        markup.add(InlineKeyboardButton('–í—ã–±—Ä–æ—Å–∏—Ç—å', callback_data="invDrop_{}".format(str(use))))
        markup.add(InlineKeyboardButton('–í –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å', callback_data="inveClose"))
    elif result.type == "–ê—Ä—Ç–µ—Ñ–∞–∫—Ç":
        if result.name == '–ê–º—É–ª–µ—Ç –∑–¥–æ—Ä–æ–≤—å—è':
            text = "{}. –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–∞—Å—Å–∏–≤–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É 5‚ù§Ô∏è –≤ –æ–±–º–µ–Ω –Ω–∞ 3‚ö°Ô∏è. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–¥–µ—Ç—å.".format(result.name)
        elif result.name == '–û—Å–∫–æ–ª–æ–∫ —ç–Ω–µ—Ä–≥–∏–∏':
            text = "{}. –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–∞—Å—Å–∏–≤–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É 5‚ö°Ô∏è, –µ—Å–ª–∏ —ç–Ω–µ—Ä–≥–∏—è –≤—ã—à–µ 5‚ö°Ô∏è, –Ω–æ –Ω–µ –≤—ã—à–µ 60‚ö°Ô∏è".format(result.name)
        elif result.name == '–ö–æ–ª—å—Ü–æ –∂–∏–≤–æ—Å—Ç–∏':
            text = "{}. –ë–ª–∞–≥–æ–¥–∞—Ä—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π –∞—É—Ä–µ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç ‚ù§Ô∏è –Ω–∞ 15%.".format(result.name)
        else:
            text = "{}. –î–µ–π—Å—Ç–≤–∏–µ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ".format(result.name)
        markup.add(InlineKeyboardButton('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å'.format(str(result.name)), callback_data="invUsing_{}".format(str(use))))
        markup.add(InlineKeyboardButton('–í—ã–±—Ä–æ—Å–∏—Ç—å', callback_data="invDrop_{}".format(str(use))))
        markup.add(InlineKeyboardButton('–í –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å', callback_data="inveClose"))
    elif result.type == "–ë—Ä–æ–Ω—è":
        name, size, bonus = db.items(result.name, check=True)
        text = "{}. +{}üõ° –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?".format(name, bonus)
        markup.add(InlineKeyboardButton('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å'.format(str(result.name)), callback_data="invUsing_{}".format(str(use))))
        markup.add(InlineKeyboardButton('–í—ã–±—Ä–æ—Å–∏—Ç—å', callback_data="invDrop_{}".format(str(use))))
        markup.add(InlineKeyboardButton('–í –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å', callback_data="inveClose"))
    else:
        text = "{}. \n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?".format(str(result.name))
        markup.add(InlineKeyboardButton('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å'.format(str(result.name)), callback_data="invUsing_{}".format(str(use))))
        markup.add(InlineKeyboardButton('–í—ã–±—Ä–æ—Å–∏—Ç—å', callback_data="invDrop_{}".format(str(use))))
        markup.add(InlineKeyboardButton('–í –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å', callback_data="inveClose"))
    gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id, reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data.startswith('invDrop_'))
def invDrop(call): 
    if (call.from_user.id == call.message.chat.id):
        pass
    else:
        return
    do = call.data.split('_')
    use = do[1]
    markup = InlineKeyboardMarkup()
    markup.row_width = 2
    result = db.Inventory.get(id=use)
    result.active = 0
    result.save()
    text = "–í—ã –≤—ã–±—Ä–æ—Å–∏–ª–∏ {}".format(result.name)
    gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id)





@bot.callback_query_handler(func=lambda call: call.data.startswith('invUsing_'))
def invUsing(call): 
    if (call.from_user.id == call.message.chat.id):
        pass
    else:
        return
    do = call.data.split('_')
    use = do[1]
    markup = InlineKeyboardMarkup()
    markup.row_width = 2
    result = db.Inventory.get(id=use)
    user = db.Users.get(id=result.idplayer)
    if result.active != 0:
        pass
    else:
        text = "–ü—Ä–µ–¥–º–µ—Ç–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!"
        gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id)
        return
    if result.type == '–ï–¥–∞':
        result.active = 0
        user.eat = user.eat + result.bonus
        if int(user.eat) > 100:
            user.eat = 100
        if result.name == '–ü–µ—á–µ–Ω—å–µ —Å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ–º':
            text = "–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∞–ø–ø–µ—Ç–∏—Ç–∞!\n{}".format(random.choice(pechene))
        else:
            text = "–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∞–ø–ø–µ—Ç–∏—Ç–∞!\n"
        if result.name == "ü•† –ü–µ—á–µ–Ω—å–µ —Å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ–º":
            name = user.username
            username = call.from_user.first_name
            pr = db.predskaz(name, username)
            text += str(pr)
    elif result.name == '–°–≤–∏—Ç–æ–∫ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏':
        if user.location == '–ü–µ—Ä–≤—ã–π —ç—Ç–∞–∂ –±–∞—à–Ω–∏' or user.location == '–í—Ç–æ—Ä–æ–π —ç—Ç–∞–∂ –±–∞—à–Ω–∏' or user.location == '–¢—Ä–µ—Ç–∏–π —ç—Ç–∞–∂ –±–∞—à–Ω–∏' or user.location == '–ß–µ—Ç–≤—ë—Ä—Ç–Ω—ã–π —ç—Ç–∞–∂ –±–∞—à–Ω–∏':
            text = "–í—ã –ø–æ–ø—ã—Ç–∞–ª–∏—Å—å —Å–±–µ–∂–∞—Ç—å –æ—Ç –≥–Ω–µ–≤–∞ –º–æ–Ω—Å—Ç—Ä–æ–≤ –±–∞—à–Ω–∏, –æ–¥–Ω–∞–∫–æ –ø—Ä–æ–∏–∑–Ω–µ—Å—ë–Ω–Ω–æ–µ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–µ –Ω–µ –ø–æ–º–æ–≥–ª–æ - –≤—ã –æ—Å—Ç–∞–ª–∏—Å—å –≤–Ω—É—Ç—Ä–∏ –±–∞—à–Ω–∏."
            return text
        if user.battleStatus == 1:
            mob = db.Monsters.get(id=user.battleWith)
            if mob:
                mob.battleStatus = 0
                mob.nowhp = mob.hp
                mob.save()
                user.battleStatus = 0
        result.active = 0
        checkgorod = db.Inventory.get(idplayer=user.id, name='–ë–æ–ª—å—à–æ–π –≥–æ—Ä–æ–¥')
        if checkgorod:
            user.location = '–•—ç–≤–µ–Ω–±—É—Ä–≥'
        else:
            user.location = '–ì–æ—Ä–æ–¥'
        user.position = '–ü–ª–æ—â–∞–¥—å'
        user.battleStatus = 0
        text = "–í—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ üìú–°–≤–∏—Ç–æ–∫ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏"
    elif result.name == '–ö–æ—Ñ–µ':
        result.active = 0
        user.energy = user.energy + 70
        if user.energy > 100:
            user.energy = 100
        text = "–í—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ ‚òïÔ∏è–ö–æ—Ñ–µ"
    elif result.name == '–ó–µ–ª—å–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è':
        result.active = 0
        user.nowhp = user.hp
        text = "–í—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ üß™–ó–µ–ª—å–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è"
    elif result.type == '–ó–µ–ª—å–µ':
        result.active = 0
        user.nowhp = user.nowhp + result.bonus
        if user.nowhp > user.hp:
            user.nowhp = user.hp
        text = "–í—ã —É—Å–ø–µ—à–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ {}".format(str(result.name)) 
    elif result.type == '–°—É–Ω–¥—É–∫':
        text = case(result)
    elif result.type == '–ë—Ä–æ–Ω—è':
        user = db.Users.get(user_id=call.from_user.id)
        text = armoruse(call, use, result, user)
    elif result.type == '–ê—Ä—Ç–µ—Ñ–∞–∫—Ç':
        user = db.Users.get(user_id=call.from_user.id)
        text = userart(call, use, result, user)
        user = db.Users.get(user_id=call.from_user.id)
    else:
        text = "–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ"
    markup = InlineKeyboardMarkup()
    markup.row_width = 2
    markup.add(InlineKeyboardButton('–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å', callback_data="inv"))
    result.save()
    user.save()
    gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id, parse_mode = 'markdown', reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data.startswith('inv'))
def inv(call):
    user = db.Users.get(user_id=call.from_user.id)
    inventory = db.Inventory.select().where(db.Inventory.idplayer == user.id, db.Inventory.active == 1)
    inventorySize = db.getInventorySize(user)
    count = {}
    size1 = {}
    text = "üéí*–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å* (üì¶{}/{})\n".format(inventorySize, user.inventorySizeMax)
    markup = InlineKeyboardMarkup()
    markup.row_width = 2
    for item in inventory:
        if item.name in count:
            name, size, bonus = db.items(item.name, check=True)
            count[item.name] += 1
            size1[item.name] = size1[item.name] + int(size)
        else:
            name, size, bonus = db.items(item.name, check=True)
            count[item.name] = 1
            size1[item.name] = int(size)
            markup.add(InlineKeyboardButton('{}'.format(str(name)), callback_data="invUse_{}".format(str(item.id))))
    for dict in count:
        name, size, bonus = db.items(dict, check=True)
        text += "\n—Ö{} {} üì¶{}".format(count[dict], name, size1[dict])
    check_a = db.Inventory.get(active=2, idplayer=user.id)
    if check_a:
        markup.add(InlineKeyboardButton('–°–Ω–∞—Ä—è–∂–µ–Ω–∏–µ', callback_data="armorpers"))
    gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id, parse_mode = 'markdown', reply_markup=markup)




@bot.callback_query_handler(func=lambda call: call.data.startswith('inveClose'))
def invClose(call): 
    if (call.from_user.id == call.message.chat.id):
        pass
    else:
        return
    text = "–í—ã –∑–∞–∫—Ä—ã–ª–∏ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å"
    gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id)


#################
# ARMOR & ARTS  #
#################
def userart(call, use, result, user):
    if result.name == '–ö—É—Å–æ–∫ –ø–∞–∑–∑–ª–∞':
        result.active = 0
        user.atk += 10
        user.save()
        result.save()
        text = "–ù–µ –∑–Ω–∞—è —á—Ç–æ –¥–µ–ª–∞—Ç—å —Å —ç—Ç–∏–º –∫—É—Å–æ—á–∫–æ–º –ø–∞–∑–∑–ª–∞, –≤—ã —Å–ª—É—á–∞–π–Ω–æ —Å–ª–æ–º–∞–ª–∏ –µ–≥–æ. –í–Ω–µ–∑–∞–ø–Ω–æ, –≤—ã –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞–ª–∏ –ª—ë–≥–∫–æ—Å—Ç—å –∏ –≥–æ–ª–æ–≤–æ–∫—Ä—É–∂–µ–Ω–∏–µ, –∞ –≤–æ–∫—Ä—É–≥ –ø–∞–∑–∑–ª–∞ –ø–æ—è–≤–∏–ª–æ—Å—å —Å—Ç—Ä–∞–Ω–Ω–æ–µ —Å–≤–µ—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Ä–∞–∑–≥–æ—Ä–∞–ª–æ—Å—å –≤—Å—ë —è—Ä—á–µ –∏ —è—Ä—á–µ. –ö–æ–≥–¥–∞ —Å–≤–µ—Ç –ø—Ä–æ–ø–∞–ª, –ø–∞–∑–∑–ª–∞ –≤—ã –Ω–µ –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏.\n+10üî™"
    elif result.name == '–í–æ–ª—à–µ–±–Ω—ã–µ –∫–æ—Å—Ç–∏':
        text = "–í—ã –ø—Ä–æ—Å—Ç–æ... –ë—Ä–æ—Å–∏–ª–∏ –∫–æ—Å—Ç–∏ –Ω–∞ –ø–æ–ª, –≥–ª—è–¥—è –Ω–∞ –∫–æ–º–±–∏–Ω–∞—Ü–∏—é. –ù–æ –Ω–∏—á–µ–≥–æ –Ω–µ —Å–ª—É—á–∏–ª–æ—Å—å. –ü—Ä–∏—à–ª–æ—Å—å –∏—Ö –ø–æ–¥–æ–±—Ä–∞—Ç—å... –ù–∞–≤–µ—Ä–Ω–æ–µ, –Ω—É–∂–Ω–æ –∏—Ö –æ—Å—Ç–∞–≤–∏—Ç—å –¥–æ –ª—É—á—à–µ–≥–æ –º–æ–º–µ–Ω—Ç–∞."
    elif result.name == '–ê–º—É–ª–µ—Ç –∑–¥–æ—Ä–æ–≤—å—è':
        checkother = db.Inventory.get(idplayer=user.id, name='–ê–º—É–ª–µ—Ç –∑–¥–æ—Ä–æ–≤—å—è', active=2)
        checkother2 = db.Inventory.get(idplayer=user.id, name='–û—Å–∫–æ–ª–æ–∫ —ç–Ω–µ—Ä–≥–∏–∏', active=2)
        if result.active == 2:
            result.active = 1
            result.save()
            text = "–í—ã —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ {}".format(result.name)
            return text
        if checkother or checkother2:
            text = "–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–º—É–ª–µ—Ç, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è"
        else:
            text = "–í—ã –Ω–∞–¥–µ–ª–∏ üßø–ê–º—É–ª–µ—Ç –∑–¥–æ—Ä–æ–≤—å—è"
            result.active = 2
            result.save()
    elif result.name == '–û—Å–∫–æ–ª–æ–∫ —ç–Ω–µ—Ä–≥–∏–∏':
        checkother = db.Inventory.get(idplayer=user.id, name='–û—Å–∫–æ–ª–æ–∫ —ç–Ω–µ—Ä–≥–∏–∏', active=2)
        checkother2 = db.Inventory.get(idplayer=user.id, name='–ê–º—É–ª–µ—Ç –∑–¥–æ—Ä–æ–≤—å—è', active=2)
        if result.active == 2:
            result.active = 1
            result.save()
            text = "–í—ã —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ {}".format(result.name)
            return text
        if checkother or checkother2:
            text = "–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–º—É–ª–µ—Ç, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è"
        else:
            text = "–í—ã –Ω–∞–¥–µ–ª–∏ üî∑–û—Å–∫–æ–ª–æ–∫ —ç–Ω–µ—Ä–≥–∏–∏"
            result.active = 2
            result.save()
    elif result.name == '–ö–æ–ª—å—Ü–æ –∂–∏–≤–æ—Å—Ç–∏':
        if result.active == 1:
            result.active = 2
            userBonusHp = user.hp * 0.15
            user.hp += int(userBonusHp)
            user.save()
            result.save()
            text = "–í—ã –Ω–∞–¥–µ–ª–∏ üíç–ö–æ–ª—å—Ü–æ –∂–∏–≤–æ—Å—Ç–∏"
        else:
            result.active = 1
            userBonusHp = user.hp / 1.15
            user.hp = int(userBonusHp)
            user.save()
            result.save()
            text = "–í—ã —Å–Ω—è–ª–∏ üíç–ö–æ–ª—å—Ü–æ –∂–∏–≤–æ—Å—Ç–∏"
    return text


@bot.callback_query_handler(func=lambda call: call.data.startswith('armorpers'))
def armorpers(call):
    user = db.Users.get(user_id=call.from_user.id)
    re = db.Inventory.select().where(db.Inventory.idplayer==user.id, db.Inventory.active==2)
    text = '–°–Ω–∞—Ä—è–∂–µ–Ω–∏–µ, —á—Ç–æ –≤—ã –Ω–æ—Å–∏—Ç–µ:'
    markup = InlineKeyboardMarkup()
    markup.row_width = 2
    for z in re:
        if z.type == '–ë—Ä–æ–Ω—è':
            name, bonus, size = db.items(z.name, check=True)
            text += "\n{} | +{}üõ°".format(name, z.bonus)
        elif z.type == '–ê—Ä—Ç–µ—Ñ–∞–∫—Ç':
            name, bonus, size = db.items(z.name, check=True)
            text += "\n{}".format(name)
        markup.add(InlineKeyboardButton('–°–Ω—è—Ç—å {}'.format(name), callback_data="invUsing_{}".format(z.id)))
    markup.add(InlineKeyboardButton('–í –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å', callback_data="invClose"))
    gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id, parse_mode = 'markdown', reply_markup=markup)



def armoruse(call, use, result, user):
    head = ['–•–æ–∫–∫–µ–π–Ω–∞—è –º–∞—Å–∫–∞', '–ö–æ–∂–∞–Ω—ã–π —à–ª–µ–º', '–®–ª—è–ø–∞ —Ñ–æ–∫—É—Å–Ω–∏–∫–∞', '–ö–µ–ø–∫–∞ –∞–¥–∏–¥–∞—Å', '–®–ª–µ–º –∏–∑ —Ñ–æ–ª—å–≥–∏', '–ö–æ–ª–ø–∞–∫ –≥–ª–∞–≤–≤—Ä–∞—á–∞']
    body = ['–ö–æ–∂–∞–Ω—ã–π –Ω–∞–≥—Ä—É–¥–Ω–∏–∫', '–ë—Ä–æ–Ω–µ–∂–∏–ª–µ—Ç', '–ö–æ–º–±–∏–Ω–µ–∑–æ–Ω —Å—Ç–∞–ª–∫–µ—Ä–∞', '–ù–æ—á–Ω—É—à–∫–∞ –†–∞—Å–∫—É–ª–æ–≤–æ–π', '–ú–∞–π–∫–∞ –∏–∑ –ø–∞–∫–µ—Ç–∞', '–•–∞–ª–∞—Ç –≥–ª–∞–≤—Ä–∞—á–∞']
    foot = ['–ö–æ–∂–∞–Ω—ã–µ —à—Ç–∞–Ω—ã', '–°–ø–æ—Ä—Ç–∏–≤–∫–∏ –∞–¥–∏–¥–∞—Å', '–ù–∏–∂–Ω–µ–µ –±–µ–ª—å—ë –†–∞—Å–∫—É–ª–æ–≤–æ–π', '–®—Ç–∞–Ω—ã –ê—à–æ–¥–∞—Å', '–ú–æ–¥–Ω—ã–µ —à—Ç–∞–Ω—ã', '–®—Ç–∞–Ω—ã –≥–ª–∞–≤–≤—Ä–∞—á–∞']
    shoes = ['–ë–µ—Ä—Ü—ã', '–ö–æ–∂–∞–Ω—ã–µ –±–æ—Ç–∏–Ω–∫–∏', '–ö—Ä–æ—Å—ã –∞–¥–∏–¥–∞—Å', '–¢—É—Ñ–µ–ª—å–∫–∏ –†–∞—Å–∫—É–ª–æ–≤–æ–π', '–ù–ï–∫—Ä–æ—Å—Å–æ–≤–∫–∏', '–¢–∞–ø–æ—á–∫–∏ –≥–ª–∞–≤–≤—Ä–∞—á–∞']
    nowhead = 1 if result.name in head else 0
    nowbody = 1 if result.name in body else 0
    nowfoot = 1 if result.name in foot else 0
    nowshoes = 1 if result.name in shoes else 0
    if result.active == 1:
        re = db.Inventory.select().where(db.Inventory.idplayer==result.idplayer, db.Inventory.active==2, db.Inventory.id!=result.id)
        for z in re:
            if z.name in head and nowhead == 1 or z.name in body and nowbody == 1 or z.name in foot and nowfoot == 1 or z.name in shoes and nowshoes == 1:
                text = "–£ –≤–∞—Å —É–∂–µ –æ–¥–µ—Ç–∞ –¥—Ä—É–≥–∞—è –±—Ä–æ–Ω—è –ø–æ–¥–æ–±–Ω–æ–≥–æ —Ç–∏–ø–∞"
                return text
        result.active = 2
        user.armor = user.armor + result.bonus
        user.save()
        result.save()
        text = "–í—ã —É—Å–ø–µ—à–Ω–æ –Ω–∞–¥–µ–ª–∏ –±—Ä–æ–Ω—é."
    else:
        inventorySize = db.getInventorySize(user)
        if result.size + inventorySize > user.inventorySizeMax:
            text = "–ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ –∫—É–¥–∞ –í—ã –º–æ–∂–µ—Ç–µ –¥–µ—Ç—å —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ - –≤ –∑—É–±—ã, –Ω–æ –æ–Ω–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–æ–ª—å—à–æ–µ –¥–ª—è —ç—Ç–æ–≥–æ"
        else:
            result.active = 1
            user.armor = user.armor - result.bonus
            result.save()
            user.save()
            text = "–í—ã —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ –±—Ä–æ–Ω—é."
    return text


################################
#    REFERAL O4KA I DONATE     #
################################
@bot.message_handler(commands=['myrefs'])
def refs(m):
    result = db.Users.select().where(db.Users.ref==m.from_user.id)
    count = 0
    textc = ""
    for dict in result:
        count += 1
        donatesum = int(dict.donatesum * 0.1)
        textc += "{} - {}lvl. –î–æ—Ö–æ–¥: {}üíé\n".format(dict.username, dict.lvl, donatesum)
    if count != 0:
        text = "–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞:\n–ü—Ä–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ 150üí∞ –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –∏–º 5 —É—Ä–æ–≤–Ω—è.\n–ü—Ä–∏ –¥–æ–Ω–∞—Ç–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –≤–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 10%üíé –æ—Ç —Å—É–º–º—ã –¥–æ–Ω–∞—Ç–∞.\n–í–∞—à–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è:\n`https://t.me/TowerOfHeaven_bot?start={}`\n–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –∏ –¥–æ—Ö–æ–¥–∞ —Å –Ω–∏—Ö:\n{}".format(str(m.from_user.id), textc)
    else:
        text = "–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞:\n–ü—Ä–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ 150üí∞ –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –∏–º 5 —É—Ä–æ–≤–Ω—è.\n–ü—Ä–∏ –¥–æ–Ω–∞—Ç–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –≤–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 10%üíé –æ—Ç —Å—É–º–º—ã –¥–æ–Ω–∞—Ç–∞.\n–í–∞—à–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è:\n`https://t.me/TowerOfHeaven_bot?start={}`\n–£ –≤–∞—Å –Ω–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç.".format(str(m.from_user.id))
    bot.reply_to(m, text, parse_mode='markdown')
import requests
mylogin = '380662357576'
api_access_token = 'f3e92f90802cacea83fd8183641edac9'

@bot.message_handler(commands=['donate'])
def donatestar(m):
    result = db.Users.get(user_id=m.from_user.id)
    res = db.Donate.get(user=m.from_user.id, status=0)
    if res:
        text = res.comment
    else:
        symbol = 'QWERTYUIOPASDFGHJKLZXCVBNM1234567890'
        text = ''
        for i in range(20):
            text += random.choice(symbol)
        newdonate = db.Donate(user=m.from_user.id, summ=0, status=0, comment=text)
    markup = InlineKeyboardMarkup()
    markup.row_width = 2
    markup.add(InlineKeyboardButton('–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–ª–∞—Ç—ë–∂', callback_data="checkdonate_{}_{}".format(result.id, text)))
    donateText = "–ü–æ–∫—É–ø–∫–∞ üíé —Å–æ–≤–µ—Ä—à–∞–µ—Ç—Å—è –ø–æ –∫—É—Ä—Å—É - 1 —Ä—É–±–ª—å = 1üíé."
    donateText += "\n–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –ø–æ–∫—É–ø–∫–∞ üíé –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ —Ä—É—á–Ω–æ–º —Ä–µ–∂–∏–º–µ ( https://yasobe.ru/na/TowerOfHeaven )\n–í –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –ø–ª–∞—Ç–µ–∂–∞ —É–∫–∞–∂–∏—Ç–µ –í–∞—à –≤–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤–æ–π ID - {} –¥–ª—è –∑–∞—á–∏—Å–ª–µ–Ω–∏—è –Ω–∞ –í–∞—à –±–∞–ª–∞–Ω—Å üíé\n–ó–∞—á–∏—Å–ª–µ–Ω–∏–µ üíé –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç –≤ —Ç–µ—á–µ–Ω–∏–∏ —Å—É—Ç–æ–∫ (–º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è /report –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞"
#    donateText += "\n‚ö†Ô∏è–í–ù–ò–ú–ê–¢–ï–õ–¨–ù–û —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–æ–¥. –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ –Ω–µ –ø—Ä–æ–π–¥—ë—Ç.‚ö†Ô∏è"
#    donateText += "\n–ö–æ–¥ - `{}`".format(text)
    bot.send_message(m.chat.id, donateText, parse_mode='markdown')

@bot.callback_query_handler(func=lambda call: call.data.startswith('donate_start'))
def donatestart(call):
    result = db.Users.get(user_id=call.from_user.id)
    res = db.Donate.get(user=call.from_user.id, status=0)
    if res:
        text = res.comment
    else:
        symbol = 'QWERTYUIOPASDFGHJKLZXCVBNM1234567890'
        text = ''
        for i in range(20):
            text += random.choice(symbol)
        newdonate = db.Donate(user=call.from_user.id, summ=0, status=0, comment=text)
    markup = InlineKeyboardMarkup()
    markup.row_width = 2
    markup.add(InlineKeyboardButton('–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–ª–∞—Ç—ë–∂', callback_data="checkdonate_{}_{}".format(result.id, text)))
    donateText = "–ü–æ–∫—É–ø–∫–∞ üíé —Å–æ–≤–µ—Ä—à–∞–µ—Ç—Å—è –ø–æ –∫—É—Ä—Å—É - 1 —Ä—É–±–ª—å = 1üíé."
    donateText += "\n–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –ø–æ–∫—É–ø–∫–∞ üíé –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ —Ä—É—á–Ω–æ–º —Ä–µ–∂–∏–º–µ ( https://yasobe.ru/na/TowerOfHeaven )\n–í –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –ø–ª–∞—Ç–µ–∂–∞ —É–∫–∞–∂–∏—Ç–µ –í–∞—à –≤–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤–æ–π ID - {} –¥–ª—è –∑–∞—á–∏—Å–ª–µ–Ω–∏—è –Ω–∞ –í–∞—à –±–∞–ª–∞–Ω—Å üíé\n–ó–∞—á–∏—Å–ª–µ–Ω–∏–µ üíé –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç –≤ —Ç–µ—á–µ–Ω–∏–∏ —Å—É—Ç–æ–∫ (–º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è /report –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞"
#    donateText += "\n‚ö†Ô∏è–í–ù–ò–ú–ê–¢–ï–õ–¨–ù–û —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–æ–¥. –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ –Ω–µ –ø—Ä–æ–π–¥—ë—Ç.‚ö†Ô∏è"
#    donateText += "\n–ö–æ–¥ - `{}`".format(text)
    gg = bot.edit_message_text(donateText, call.message.chat.id, call.message.message_id, parse_mode = 'markdown')




# –ò—Å—Ç–æ—Ä–∏—è –ø–ª–∞—Ç–µ–∂–µ–π - –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∏ —Å–ª–µ–¥—É—é—â–∏–µ n –ø–ª–∞—Ç–µ–∂–µ–π
def payment_history_last(my_login, api_access_token, rows_num, next_TxnId, next_TxnDate):
    s = requests.Session()
    s.headers['authorization'] = 'Bearer ' + api_access_token  
    parameters = {'rows': rows_num, 'nextTxnId': next_TxnId, 'nextTxnDate': next_TxnDate}
    h = s.get('https://edge.qiwi.com/payment-history/v2/persons/' + my_login + '/payments', params = parameters)
    return h.json()


@bot.callback_query_handler(func=lambda call: call.data.startswith('checkdonate_'))
def checkdonate(call): 
    if (call.from_user.id == call.message.chat.id):
        pass
    else:
        return
    do = call.data.split('_')
    id = do[1]
    key = do[2]
    lastPayments = payment_history_last(mylogin, api_access_token, '5','','')
    strat = False
    for dict in lastPayments:
        data = lastPayments['data']
        for list in data:
            summ = list['sum']
            amount = summ['amount']
            comment = list['comment']
            status = list['status']
            if status == "SUCCESS":
                if str(comment) == str(key):
                    strat = True
                    plusPts = int(amount)
                    bot.send_message(kakushigoto, "–£—Å–ø–µ—à–Ω—ã–π –ø–ª–∞—Ç—ë–∂\n{}/{} –Ω–∞ {} —Ä—É–±".format(call.from_user.id, call.from_user.username, str(amount)))
                    try:
                        text = "–°–ø–∞—Å–∏–±–æ, –ø–ª–∞—Ç—ë–∂ –ø—Ä–æ—à—ë–ª. –í–∞–º –∑–∞—á–∏—Å–ª–µ–Ω–æ {} üíé".format(str(plusPts))
                        re = db.Donate.get(comment=key)
                        if re.status == 1:
                            text = "–û—à–∏–±–∫–∞. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ /report"
                            return
                        else:
                            pass
                        user = db.Users.get(user_id=re.user)
                        user.almaz = user.almaz + plusPts
                        user.donatesum = user.donatesum + plusPts
                        re.status = 1
                        re.summ = plusPts
                        if user.ref:
                            toPay = int(plusPts * 0.1)
                            ref = db.Users.get(user_id=user.ref)
                            ref.almaz = ref.almaz + toPay
                            if ref.partner == 1:
                                user.donatesumPartn = user.donatesumPartn + plusPts
                        user.save()
                        re.save()
                        ref.save()
                        gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id)    
                        return
                    except:
                        text = "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞—á–∏—Å–ª–∏—Ç—å üíé –Ω–∞ —Å—á—ë—Ç. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ /report —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –ø–ª–∞—Ç–µ–∂–∞\n{}".format(key)
                        gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id)    
                        return
    if strat == False:
        text = "–ü–ª–∞—Ç—ë–∂ –Ω–µ –ø—Ä–æ—à—ë–ª. –í–æ–∑–º–æ–∂–Ω–æ, —Å—Ç–æ–∏—Ç –Ω–µ–º–Ω–æ–≥–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å –∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–∞. –ï—Å–ª–∏ –∂–µ –Ω–µ –ø–æ–º–æ–≥–∞–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–∏ –¥–æ–ª–≥–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ /report –¥–ª—è —Å–≤—è–∑–∏ —Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º –∏ —Ä—É—á–Ω—ã–º –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ–º –ø–ª–∞—Ç–µ–∂–∞ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –∫–æ–¥–∞ –æ–ø–ª–∞—Ç—ã..\n–ö–ª—é—á –∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é –ø–ª–∞—Ç–µ–∂–∞:\n"
        text += "`{}`\nQIWI-–∫–æ—à–µ–ª—ë–∫: +380662357576".format(str(key))
        markup = InlineKeyboardMarkup()
        markup.row_width = 2
        markup.add(InlineKeyboardButton('–ü–æ–≤—Ç–æ—Ä–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–ª–∞—Ç—ë–∂.', callback_data="checkdonate_{}_{}".format(str(id), key)))
        gg = bot.edit_message_text(text, call.message.chat.id, call.message.message_id, reply_markup=markup, parse_mode = 'markdown')
    





@bot.message_handler(commands=['mypartn'])
def mypartn(m):
    re = db.Users.get(user_id=m.from_user.id)
    if re.partner == 1:
        pass
    else:
        bot.reply_to(m, "–í—ã –º–æ–∂–µ—Ç–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å 30% –æ—Ç –¥–æ–Ω–∞—Ç–∞ –≤–∞—à–∏—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤. –î–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É - @kakushigoto")
        return
    result = db.Users.select().where(db.Users.ref == m.from_user.id)
    count = 0
    zarabotok = 0
    textc = ""
    for dict in result:
        count += 1
        zarabotok += int(dict.donatesumPartn * 0.3)
    text = "–í–∞—à–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è:\n`https://t.me/TowerOfHeaven_bot?start={}`\n–ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ - {} —á–µ–ª.\n–í—Å–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: {}—Ä—É–±.".format(str(m.from_user.id), count, zarabotok)
    bot.reply_to(m, text, parse_mode='markdown')

