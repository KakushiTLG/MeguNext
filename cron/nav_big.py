import pymysql
import telebot
import os
from telebot import types
from telebot.types import InlineKeyboardMarkup
from telebot.types import InlineKeyboardButton
import random
token = '1025890805:AAHKuwOfB0rGRmK_XdSHrnNhIfjfZ0LgDEE'
bot = telebot.TeleBot(token, skip_pending = True, threaded= False ,num_threads= 1)       
def on_db():
    db = pymysql.connect(host='localhost',
                         user='rabbit',
                         password='password',                             
                         db='megu',
                         charset='utf8mb4',
                         cursorclass=pymysql.cursors.DictCursor)
    return db

def battleStart(player, enemy):
    battleid = ''
    symbols = 'qwertyuiopasdfghjklzxcvbnm'
    symbols += 'QWERTYUIOPASDFGHJKLZXCVBNM'
    symbols += '1234567890'
    for i in range(1,15):
        battleid += random.choice(symbols)
    text = "‚öôÔ∏è{}\n\n".format(battleid)
    db = on_db()
    with db.cursor() as cursor:
        sql = "INSERT INTO battle (idbattle, player, mob) VALUES (%s, %s, %s)"
        cursor.execute(sql, (battleid, player['id'], enemy['id']))
        db.commit()
        firstAtk = random.randint(1, 100)
        if firstAtk >= 50:
            sql = "SELECT * FROM inventory WHERE name = '–°–≤–∏—Ç–æ–∫ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏' AND idplayer = %s AND active = 1"
            cursor.execute(sql, (player['id']))
            tp = cursor.fetchone()
            #Player first atk
            text += "–í—ã –∞—Ç–∞–∫—É–µ—Ç–µ –ø–µ—Ä–≤—ã–º."
            markup = InlineKeyboardMarkup()
            markup.row_width = 2
            markup.add(InlineKeyboardButton('–ê—Ç–∞–∫–æ–≤–∞—Ç—å', callback_data="battle_atk"))
            if tp:
                markup.add(InlineKeyboardButton('–¢–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –•—ç–≤–µ–Ω–±—É—Ä–≥', callback_data="battle_tp"))
            else:
                markup.add(InlineKeyboardButton('–û—Ç—Å—Ç—É–ø–∏—Ç—å(–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ)', callback_data="battle_tpOff"))
            if player['item'] == '–ü–∏—Å—Ç–æ–ª–µ—Ç —Å –Ω–æ–∂–æ–º':
                markup.add(InlineKeyboardButton('–û—Å–æ–±—ã–π –Ω–∞–≤—ã–∫: –í—ã—Å—Ç—Ä–µ–ª', callback_data="battle_shoot"))
            bot.send_message(player['user_id'], text, reply_markup=markup)
        else:
            armor = int(player['armor'] / 3)
            if enemy['atk'] < armor:
                armor = enemy['atk'] - 1
                playerNewHp = int(player['nowhp']) + armor - int(enemy['atk'])
            else:
                playerNewHp = int(player['nowhp']) + armor - int(enemy['atk'])
            if playerNewHp > 0:
                sql = "SELECT * FROM inventory WHERE name = '–°–≤–∏—Ç–æ–∫ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏' AND idplayer = %s AND active = 1"
                cursor.execute(sql, (player['id']))
                tp = cursor.fetchone()
                sql = "UPDATE users SET nowhp = %s WHERE user_id = %s"
                cursor.execute(sql, (playerNewHp, player['user_id']))
                db.commit()
                text += "{} –∞—Ç–∞–∫–æ–≤–∞–ª –≤–∞—Å –ø–µ—Ä–≤—ã–º. –£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å {}‚ù§Ô∏è(üõ°{})".format(enemy['name'], playerNewHp, armor)
                markup = InlineKeyboardMarkup()
                markup.row_width = 2
                markup.add(InlineKeyboardButton('–ê—Ç–∞–∫–æ–≤–∞—Ç—å', callback_data="battle_atk"))
                if tp:
                    markup.add(InlineKeyboardButton('–¢–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –•—ç–≤–µ–Ω–±—É—Ä–≥', callback_data="battle_tp"))
                else:
                    markup.add(InlineKeyboardButton('–û—Ç—Å—Ç—É–ø–∏—Ç—å(–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ)', callback_data="battle_tpOff"))
                bot.send_message(player['user_id'], text, reply_markup=markup)
            else:
                playerNewHp = 0
                loser = player['money'] * 0.5
                gorod = '–•—ç–≤–µ–Ω–±—É—Ä–≥'
                text = "\n–°–∏–ª—ã –±—ã–ª–∏ –Ω–µ—Ä–∞–≤–Ω—ã, –Ω–æ, –∫ —Å—á–∞—Å—Ç—å—é –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –º–æ–Ω—Å—Ç—Ä—ã —Å—Ä–∞–∂–∞—é—Ç—Å—è –Ω–µ —Ç–æ–ª—å–∫–æ —Ä–∞–¥–∏ –ø–∏—â–∏, –ø–æ—ç—Ç–æ–º—É –∫–∞–∫ —Ç–æ–ª—å–∫–æ —Ç—ã –ø–µ—Ä–µ—Å—Ç–∞–ª —Ä–∞–∑–≤–ª–µ–∫–∞—Ç—å —Å–≤–æ–∏–º–∏ –¥–≤–∏–∂–µ–Ω–∏—è–º–∏ –º–æ–±–∞, —Ç–µ–±—è –æ—Å—Ç–∞–≤–∏–ª–∏ –≤ –ø–æ–∫–æ–µ –∏ –ø–æ–∑–≤–æ–ª–∏–ª–∏ –¥–æ–ø–æ–ª–∑—Ç–∏ –¥–æ –ø—Ä–∏–≤–∞–ª–∞.\n–ü–æ—Ç–µ—Ä—è–Ω–æ: {}üí∞".format(int(loser))
                sql = "UPDATE users SET location = '–•—ç–≤–µ–Ω–±—É—Ä–≥' WHERE user_id = %s"
                cursor.execute(sql, (player['user_id']))
                db.commit()
                sql = "UPDATE users SET position = '–ù–æ–º–µ—Ä –≤ –æ—Ç–µ–ª–µ' WHERE user_id = %s"
                cursor.execute(sql, (player['user_id']))
                db.commit()
                sql = "UPDATE users SET progStatus = 0 WHERE user_id = %s"
                cursor.execute(sql, (player['user_id']))
                db.commit()
                sql = "UPDATE users SET battleStatus = 0 WHERE user_id = %s"
                cursor.execute(sql, (player['user_id']))
                db.commit()
                sql = "UPDATE monsters SET battleStatus = 0 WHERE id = %s"
                cursor.execute(sql, (enemy['id']))
                db.commit()
                sql = "UPDATE users SET eat = 100 WHERE user_id = %s"
                cursor.execute(sql, (player['user_id']))
                db.commit()
                sql = "UPDATE users SET energy = 100 WHERE user_id = %s"
                cursor.execute(sql, (player['user_id']))
                db.commit()
                sql = "UPDATE users SET money = %s WHERE user_id = %s"
                cursor.execute(sql, (loser, player['user_id']))
                db.commit()
                sql = "UPDATE users SET nowhp = hp WHERE user_id = %s"
                cursor.execute(sql, (player['user_id']))
                db.commit()
                bot.send_message(player['user_id'], text)
        db.close()


dungeons = ['–õ–µ—Å–Ω–∞—è –≥—Ä–æ–±–Ω–∏—Ü–∞']
emojis = {'–õ–µ—Å–Ω–∞—è –≥—Ä–æ–±–Ω–∏—Ü–∞': 'üïØ–õ–µ—Å–Ω–∞—è –≥—Ä–æ–±–Ω–∏—Ü–∞'}
def nav():
    global dungeons
    global emojis
    db = on_db()
    with db.cursor() as cursor:
        sql = "SELECT * FROM users WHERE location != '–•—ç–≤–µ–Ω–±—É—Ä–≥' AND progStatus = 1 AND battleStatus = 0"
        cursor.execute(sql)
        result = cursor.fetchall()
        for dict in result:
            if dict['location'] == '–ë–æ–ª—å—à–∞—è —Å–≤–∞–ª–∫–∞':
                _random = random.randint(1, 100)
                nowProgLoc = dict['progLoc']
                _pl = nowProgLoc.split('|')
                num = _pl[1]
                newnum = int(num) + 1
                newProgLoc = "–ë–æ–ª—å—à–∞—è —Å–≤–∞–ª–∫–∞|{}".format(newnum)
                sql = "UPDATE users SET progLoc = %s WHERE user_id = %s"
                cursor.execute(sql, (newProgLoc, dict['user_id']))
                db.commit()
                if _random >= 25:
                    sql = "SELECT id FROM monsters ORDER BY id DESC"
                    cursor.execute(sql)
                    r = cursor.fetchone()
                    randommob = random.randint(1, r['id'])
                    sql = "SELECT * FROM monsters WHERE id = %s"
                    cursor.execute(sql, (randommob))
                    mob = cursor.fetchone()
                    if mob and mob['battleStatus'] == 0:
                        text = "‚ù§Ô∏è{}/{} ‚ö°Ô∏è{}/100 üçó{}/100\nüè≠–ë–æ–ª—å—à–∞—è —Å–≤–∞–ª–∫–∞: –ö-{}\n\n–ù–∞ —Ç–µ–±—è –≤—ã–ª–µ–∑ {}\n–û—Å–º–æ—Ç—Ä–µ—Ç—å—Å—è - /watch_around".format(dict['nowhp'], dict['hp'], dict['energy'], dict['eat'], newnum, mob['name'])
                        try:
                            sql = "UPDATE users SET battleStatus = 1 WHERE user_id = %s"
                            cursor.execute(sql, (dict['user_id']))
                            db.commit()
                            sql = "UPDATE users SET battleWith = %s WHERE user_id = %s"
                            cursor.execute(sql, (mob['id'], dict['user_id']))
                            db.commit()
                            sql = "UPDATE monsters SET battleWith = %s WHERE id = %s"
                            cursor.execute(sql, (dict['id'], mob['id']))
                            db.commit()
                            sql = "UPDATE monsters SET battleStatus = 1 WHERE id = %s"
                            cursor.execute(sql, (mob['id']))
                            db.commit()
                            bot.send_message(dict['user_id'], text)
                            player = dict
                            enemy = mob
                        except:
                            import traceback
                            bot.send_message(702528084, str(traceback.format_exc()))
                            sql = "UPDATE users SET location = '–•—ç–≤–µ–Ω–±—É—Ä–≥' WHERE user_id = %s"
                            cursor.execute(sql, (dict['user_id']))
                            db.commit()
                    else:
                        text = "‚ù§Ô∏è{}/{} ‚ö°Ô∏è{}/100 üçó{}/100\nüè≠–ë–æ–ª—å—à–∞—è —Å–≤–∞–ª–∫–∞: –ö-{}\n\n–û—Å–º–æ—Ç—Ä–µ—Ç—å—Å—è –≤–æ–∫—Ä—É–≥ /watch_around".format(dict['nowhp'], dict['hp'], dict['energy'], dict['eat'], newnum)
                        sql = "UPDATE users SET progStatus = 0 WHERE user_id = %s"
                        cursor.execute(sql, (dict['user_id']))
                        db.commit()
                        try:
                            markup = InlineKeyboardMarkup()
                            markup.row_width = 2
                            markup.add(InlineKeyboardButton('–ò–¥—Ç–∏ –¥–∞–ª—å—à–µ', callback_data="navgo"))
                            bot.send_message(dict['user_id'], text, reply_markup=markup)
                        except:
                            import traceback
                            bot.send_message(702528084, str(traceback.format_exc()))
                            sql = "UPDATE users SET location = '–•—ç–≤–µ–Ω–±—É—Ä–≥' WHERE user_id = %s"
                            cursor.execute(sql, (dict['user_id']))
                            db.commit()
                else:
                    text = "‚ù§Ô∏è{}/{} ‚ö°Ô∏è{}/100 üçó{}/100\nüè≠–ë–æ–ª—å—à–∞—è —Å–≤–∞–ª–∫–∞: –ö-{}\n\n–û—Å–º–æ—Ç—Ä–µ—Ç—å—Å—è –≤–æ–∫—Ä—É–≥ /watch_around".format(dict['nowhp'], dict['hp'], dict['energy'], dict['eat'], newnum)
                    sql = "UPDATE users SET progStatus = 0 WHERE user_id = %s"
                    cursor.execute(sql, (dict['user_id']))
                    db.commit()
                    try:
                        markup = InlineKeyboardMarkup()
                        markup.row_width = 2
                        markup.add(InlineKeyboardButton('–ò–¥—Ç–∏ –¥–∞–ª—å—à–µ', callback_data="navgo"))
                        bot.send_message(dict['user_id'], text, reply_markup=markup)
                    except:
                        import traceback
                        bot.send_message(702528084, str(traceback.format_exc()))
                        sql = "UPDATE users SET location = '–•—ç–≤–µ–Ω–±—É—Ä–≥' WHERE user_id = %s"
                        cursor.execute(sql, (dict['user_id']))
                        db.commit()
            elif dict['location'] == '–°–ª—É—á–∞–π–Ω—ã–π –ª–µ—Å':
                _random = random.randint(1, 100)
                nowProgLoc = dict['progLoc']
                _pl = nowProgLoc.split('|')
                num = _pl[1]
                newnum = int(num) + 1
                newProgLoc = "–°–ª—É—á–∞–π–Ω—ã–π –ª–µ—Å|{}".format(newnum)
                sql = "UPDATE users SET progLoc = %s WHERE user_id = %s"
                cursor.execute(sql, (newProgLoc, dict['user_id']))
                db.commit()
                print(_random)
                if _random >= 20:
                    progLoc = dict['progLoc']
                    _prog = progLoc.split('|')
                    newprog = int(_prog[1]) + 1
                    newProgLoc = "{}|{}".format(_prog[0], newprog)
                    sql = "SELECT size, next FROM locations WHERE name = %s"
                    cursor.execute(sql, (dict['location']))
                    loc = cursor.fetchone()
                    if loc['size'] + 1 > newprog:
                        print("Pass")
                        sql = "SELECT * FROM monsters WHERE location = %s AND pos = %s AND battleStatus = 0"
                        cursor.execute(sql, (dict['location'], newprog))
                        mob = cursor.fetchone()
                        sql = "UPDATE users SET progLoc = %s WHERE user_id = %s"
                        cursor.execute(sql, (newProgLoc, dict['user_id']))
                        db.commit()
                        if not mob:
                            if newnum == 35:
                                try:
                                    text = '–í–Ω–µ–∑–∞–ø–Ω–æ —Ç—Ä–æ–ø–∞ —Ä–∞–∑–¥–µ–ª—è–µ—Ç—Å—è –Ω–∞–¥–≤–æ–µ: –æ–¥–Ω–∞ –≤—Å–µ —Ç–∞–∫ –∂–µ –≤–µ–¥—ë—Ç –ø—Ä—è–º–æ, –Ω–æ –¥—Ä—É–≥–∞—è —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –º—Ä–∞—á–Ω–µ–µ –∏ —É—Ö–æ–¥–∏—Ç –≤ —Å—Ç–æ—Ä–æ–Ω—É.\n–î–∞–ª—å—à–µ –ª–∏—à—å —É–∫—Ä—ã—Ç—ã–π –≥—Ä–æ–∑–æ–≤—ã–º–∏ –æ–±–ª–∞–∫–∞–º–∏ –∏ –º–µ—Ä—Ç–≤—ã–º–∏ –¥–µ—Ä–µ–≤—å—è–º–∏ –ø—É—Ç—å –Ω–µ–≤–µ—Å—Ç—å –∫—É–¥–∞.\n_–ö–∞–∂–µ—Ç—Å—è, –∑–¥–µ—Å—å –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ø—É—Ç—å –∫ –Ω–µ–±–µ–∑—ã—Å–≤–µ—Å—Ç–Ω–æ–π ¬´–õ–µ—Å–Ω–æ–π –≥—Ä–æ–±–Ω–∏—Ü–µ¬ª, –ø–∏–∫ –∫–æ—Ç–æ—Ä–æ–π –≤–∏–¥–Ω–µ–µ—Ç—Å—è –≥–¥–µ-—Ç–æ –≤–¥–∞–ª–µ–∫–µ —Å—Ä–µ–¥—å –≥–Ω–∏–ª—ã—Ö –≤–µ—Ç–≤–µ–π –¥–∞ —Ä–∞–∑—è—â–∏—Ö –º–æ–ª–Ω–∏–π._'
                                    markup = InlineKeyboardMarkup()
                                    markup.row_width = 2
                                    markup.add(InlineKeyboardButton('–ö üïØÔ∏è–õ–µ—Å–Ω–æ–π –≥—Ä–æ–±–Ω–∏—Ü–µ', callback_data="dunjgo_grob"))
                                    markup.add(InlineKeyboardButton('–ò–¥—Ç–∏ –¥–∞–ª—å—à–µ', callback_data="navgo"))
                                    bot.send_message(dict['user_id'], text, reply_markup=markup, parse_mode='markdown')
                                except:
                                    import traceback
                                    bot.send_message(702528084, str(traceback.format_exc()))
                                    sql = "UPDATE users SET location = '–•—ç–≤–µ–Ω–±—É—Ä–≥' WHERE user_id = %s"
                                    cursor.execute(sql, (dict['user_id']))
                                    db.commit()
                            else:
                                try:
                                    text = "–í—Å–º–∞—Ç—Ä–∏–≤–∞—è—Å—å –≤–¥–∞–ª—å, —Ç—ã –Ω–µ –≤–∏–¥–∏—à—å –Ω–∏–∫–∞–∫–∏—Ö —Å–ª–µ–¥–æ–≤ –∂–∏–∑–Ω–∏..."
                                    bot.send_message(dict['user_id'], text)
                                except:
                                    import traceback
                                    bot.send_message(702528084, str(traceback.format_exc()))
                                    sql = "UPDATE users SET location = '–•—ç–≤–µ–Ω–±—É—Ä–≥' WHERE user_id = %s"
                                    cursor.execute(sql, (dict['user_id']))
                                    db.commit()
                        if mob and mob['battleStatus'] == 0:
                            if mob['name'] == ' üßû‚Äç‚ôÇÔ∏è–°–æ–ª–º–∏—Äüßû‚Äç‚ôÇÔ∏è':
                                newhp = int(dict['nowhp'] / 2)
                                dict['nowhp'] = newhp
                                sql = "UPDATE users SET nowhp = %s WHERE user_id = %s"
                                cursor.execute(sql, (newhp, dict['user_id']))
                                db.commit()
                                text = "–ü–æ –ø—É—Ç–∏ –≤–∞–º –≤—Å—Ç—Ä–µ—Ç–∏–ª—Å—è üßû‚Äç‚ôÇ–°–æ–ª–º–∏—Äüßû‚Äç‚ôÇ\n–û–Ω –∑–∞—Å—Ç–∞–ª –≤–∞—Å –≤—Ä–∞—Å–ø–ª–æ—Ö —Å–≤–æ–µ–π —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å—é —Ü–µ–ø–Ω–æ–π –º–æ–ª–Ω–∏–∏ –∏ –æ—Å—Ç–∞–≤–∏–ª –≤–∞–º {}‚ù§Ô∏è".format(newhp)
                                try:
                                    photo = open('/home/kakushigoto/megu/media/solmir.jpg', 'rb')
                                    audio = open('/home/kakushigoto/megu/media/Battle_Theme_3_Heroes.mp3', 'rb')
                                    bot.send_photo(dict['user_id'], photo, text)
                                    bot.send_audio(dict['user_id'], audio)
                                    text = "–ë–∏—Ç–≤–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è!"
                                    sql = "UPDATE users SET battleStatus = 1 WHERE user_id = %s"
                                    cursor.execute(sql, (dict['user_id']))
                                    db.commit()
                                    sql = "UPDATE users SET battleWith = %s WHERE user_id = %s"
                                    cursor.execute(sql, (mob['id'], dict['user_id']))
                                    db.commit()
                                    sql = "UPDATE monsters SET battleWith = %s WHERE id = %s"
                                    cursor.execute(sql, (dict['id'], mob['id']))
                                    db.commit()
                                    sql = "UPDATE monsters SET battleStatus = 1 WHERE id = %s"
                                    cursor.execute(sql, (mob['id']))
                                    db.commit()
                                    bot.send_message(dict['user_id'], text)
                                    player = dict
                                    enemy = mob
                                    battleStart(player, enemy)
                                except:
                                    import traceback
                                    bot.send_message(702528084, str(traceback.format_exc()))
                                    sql = "UPDATE users SET location = '–ì–æ—Ä–æ–¥' WHERE user_id = %s"
                                    cursor.execute(sql, (dict['user_id']))
                                    db.commit()
                            else:
                                text = "‚ù§Ô∏è{}/{} ‚ö°Ô∏è{}/100 üçó{}/100\nüåÄ–°–ª—É—á–∞–π–Ω—ã–π –ª–µ—Å: –ö-{}\n\n–ù–∞ —Ç–µ–±—è –≤—ã–ª–µ–∑ {}\n–û—Å–º–æ—Ç—Ä–µ—Ç—å—Å—è /watch_around".format(dict['nowhp'], dict['hp'], dict['energy'], dict['eat'], newnum, mob['name'])
                                try:
                                    sql = "UPDATE users SET battleStatus = 1 WHERE user_id = %s"
                                    cursor.execute(sql, (dict['user_id']))
                                    db.commit()
                                    sql = "UPDATE users SET battleWith = %s WHERE user_id = %s"
                                    cursor.execute(sql, (mob['id'], dict['user_id']))
                                    db.commit()
                                    sql = "UPDATE monsters SET battleWith = %s WHERE id = %s"
                                    cursor.execute(sql, (dict['id'], mob['id']))
                                    db.commit()
                                    sql = "UPDATE monsters SET battleStatus = 1 WHERE id = %s"
                                    cursor.execute(sql, (mob['id']))
                                    db.commit()
                                    bot.send_message(dict['user_id'], text)
                                    player = dict
                                    enemy = mob
                                    battleStart(player, enemy)
                                except:
                                    import traceback
                                    bot.send_message(702528084, str(traceback.format_exc()))
                                    sql = "UPDATE users SET location = '–•—ç–≤–µ–Ω–±—É—Ä–≥' WHERE user_id = %s"
                                    cursor.execute(sql, (dict['user_id']))
                                    db.commit()
                        else:
                            text = "‚ù§Ô∏è{}/{} ‚ö°Ô∏è{}/100 üçó{}/100\nüåÄ–°–ª—É—á–∞–π–Ω—ã–π –ª–µ—Å: –ö-{}\n\n–û—Å–º–æ—Ç—Ä–µ—Ç—å—Å—è –≤–æ–∫—Ä—É–≥ /watch_around".format(dict['nowhp'], dict['hp'], dict['energy'], dict['eat'], newnum)
                            sql = "UPDATE users SET progStatus = 0 WHERE user_id = %s"
                            cursor.execute(sql, (dict['user_id']))
                            db.commit()
                            try:
                                markup = InlineKeyboardMarkup()
                                markup.row_width = 2
                                markup.add(InlineKeyboardButton('–ò–¥—Ç–∏ –¥–∞–ª—å—à–µ', callback_data="navgo"))
                                if newnum == 35:
                                    text += '\n\n\n–í–Ω–µ–∑–∞–ø–Ω–æ —Ç—Ä–æ–ø–∞ —Ä–∞–∑–¥–µ–ª—è–µ—Ç—Å—è –Ω–∞–¥–≤–æ–µ: –æ–¥–Ω–∞ –≤—Å–µ —Ç–∞–∫ –∂–µ –≤–µ–¥—ë—Ç –ø—Ä—è–º–æ, –Ω–æ –¥—Ä—É–≥–∞—è —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –º—Ä–∞—á–Ω–µ–µ –∏ —É—Ö–æ–¥–∏—Ç –≤ —Å—Ç–æ—Ä–æ–Ω—É.\n–î–∞–ª—å—à–µ –ª–∏—à—å —É–∫—Ä—ã—Ç—ã–π –≥—Ä–æ–∑–æ–≤—ã–º–∏ –æ–±–ª–∞–∫–∞–º–∏ –∏ –º–µ—Ä—Ç–≤—ã–º–∏ –¥–µ—Ä–µ–≤—å—è–º–∏ –ø—É—Ç—å –Ω–µ–≤–µ—Å—Ç—å –∫—É–¥–∞.\n–ö–∞–∂–µ—Ç—Å—è, –∑–¥–µ—Å—å –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ø—É—Ç—å –∫ –Ω–µ–±–µ–∑—ã—Å–≤–µ—Å—Ç–Ω–æ–π ¬´–õ–µ—Å–Ω–æ–π –≥—Ä–æ–±–Ω–∏—Ü–µ¬ª, –ø–∏–∫ –∫–æ—Ç–æ—Ä–æ–π –≤–∏–¥–Ω–µ–µ—Ç—Å—è –≥–¥–µ-—Ç–æ –≤–¥–∞–ª–µ–∫–µ —Å—Ä–µ–¥—å –≥–Ω–∏–ª—ã—Ö –≤–µ—Ç–≤–µ–π –¥–∞ —Ä–∞–∑—è—â–∏—Ö –º–æ–ª–Ω–∏–π'
                                    markup = InlineKeyboardMarkup()
                                    markup.row_width = 2
                                    markup.add(InlineKeyboardButton('–ö üïØÔ∏è–õ–µ—Å–Ω–æ–π –≥—Ä–æ–±–Ω–∏—Ü–µ', callback_data="dunjgo_grob"))
                                bot.send_message(dict['user_id'], text, reply_markup=markup)
                            except:
                                import traceback
                                bot.send_message(702528084, str(traceback.format_exc()))
                                sql = "UPDATE users SET location = '–•—ç–≤–µ–Ω–±—É—Ä–≥' WHERE user_id = %s"
                                cursor.execute(sql, (dict['user_id']))
                                db.commit()
                else:
                    text = "‚ù§Ô∏è{}/{} ‚ö°Ô∏è{}/100 üçó{}/100\nüåÄ–°–ª—É—á–∞–π–Ω—ã–π –ª–µ—Å: –ö-{}\n\n–û—Å–º–æ—Ç—Ä–µ—Ç—å—Å—è –≤–æ–∫—Ä—É–≥ /watch_around".format(dict['nowhp'], dict['hp'], dict['energy'], dict['eat'], newnum)
                    sql = "UPDATE users SET progStatus = 0 WHERE user_id = %s"
                    cursor.execute(sql, (dict['user_id']))
                    db.commit()
                    try:
                        markup = InlineKeyboardMarkup()
                        markup.row_width = 2
                        markup.add(InlineKeyboardButton('–ò–¥—Ç–∏ –¥–∞–ª—å—à–µ', callback_data="navgo"))
                        if newnum == 35:
                            text += '\n\n\n–í–Ω–µ–∑–∞–ø–Ω–æ —Ç—Ä–æ–ø–∞ —Ä–∞–∑–¥–µ–ª—è–µ—Ç—Å—è –Ω–∞–¥–≤–æ–µ: –æ–¥–Ω–∞ –≤—Å–µ —Ç–∞–∫ –∂–µ –≤–µ–¥—ë—Ç –ø—Ä—è–º–æ, –Ω–æ –¥—Ä—É–≥–∞—è —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –º—Ä–∞—á–Ω–µ–µ –∏ —É—Ö–æ–¥–∏—Ç –≤ —Å—Ç–æ—Ä–æ–Ω—É.\n–î–∞–ª—å—à–µ –ª–∏—à—å —É–∫—Ä—ã—Ç—ã–π –≥—Ä–æ–∑–æ–≤—ã–º–∏ –æ–±–ª–∞–∫–∞–º–∏ –∏ –º–µ—Ä—Ç–≤—ã–º–∏ –¥–µ—Ä–µ–≤—å—è–º–∏ –ø—É—Ç—å –Ω–µ–≤–µ—Å—Ç—å –∫—É–¥–∞.\n–ö–∞–∂–µ—Ç—Å—è, –∑–¥–µ—Å—å –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ø—É—Ç—å –∫ –Ω–µ–±–µ–∑—ã—Å–≤–µ—Å—Ç–Ω–æ–π ¬´–õ–µ—Å–Ω–æ–π –≥—Ä–æ–±–Ω–∏—Ü–µ¬ª, –ø–∏–∫ –∫–æ—Ç–æ—Ä–æ–π –≤–∏–¥–Ω–µ–µ—Ç—Å—è –≥–¥–µ-—Ç–æ –≤–¥–∞–ª–µ–∫–µ —Å—Ä–µ–¥—å –≥–Ω–∏–ª—ã—Ö –≤–µ—Ç–≤–µ–π –¥–∞ —Ä–∞–∑—è—â–∏—Ö –º–æ–ª–Ω–∏–π'
                            markup.add(InlineKeyboardButton('–ö üïØÔ∏è–õ–µ—Å–Ω–æ–π –≥—Ä–æ–±–Ω–∏—Ü–µ', callback_data="dunjgo_grob"))
                        bot.send_message(dict['user_id'], text, reply_markup=markup)
                    except:
                        import traceback
                        bot.send_message(702528084, str(traceback.format_exc()))
                        sql = "UPDATE users SET location = '–•—ç–≤–µ–Ω–±—É—Ä–≥' WHERE user_id = %s"
                        cursor.execute(sql, (dict['user_id']))
                        db.commit()
            if dict['location'] == "–¢—Ä–æ–ø–∞ –∫ –±–∞—à–Ω–µ":
                nowProgLoc = dict['progLoc']
                _pl = nowProgLoc.split('|')
                num = _pl[1]
                newnum = int(num) + 1
                newProgLoc = "–¢—Ä–æ–ø–∞ –∫ –±–∞—à–Ω–µ|{}".format(newnum)
                sql = "UPDATE users SET progLoc = %s WHERE user_id = %s"
                cursor.execute(sql, (newProgLoc, dict['user_id']))
                db.commit()
                sql = "SELECT size, next FROM locations WHERE name = %s"
                cursor.execute(sql, (dict['location']))
                loc = cursor.fetchone()
                if loc['size'] + 1 > newnum:
                    print("Pass nav tower")
                    sql = "SELECT * FROM monsters WHERE location = %s AND pos = %s AND battleStatus = 0"
                    cursor.execute(sql, (dict['location'], newnum))
                    mob = cursor.fetchone()
                    sql = "UPDATE users SET progLoc = %s WHERE user_id = %s"
                    cursor.execute(sql, (newProgLoc, dict['user_id']))
                    db.commit()
                    if mob and mob['battleStatus'] == 0:
                        text = "‚ù§Ô∏è{}/{} ‚ö°Ô∏è{}/100 üçó{}/100\nüåÄ–¢—Ä–æ–ø–∞ –∫ –±–∞—à–Ω–µ: –ö-{}\n\n–ù–∞ —Ç–µ–±—è –≤—ã–ª–µ–∑ {}\n–û—Å–º–æ—Ç—Ä–µ—Ç—å—Å—è /watch_around".format(dict['nowhp'], dict['hp'], dict['energy'], dict['eat'], newnum, mob['name'])
                        try:
                            sql = "UPDATE users SET battleStatus = 1 WHERE user_id = %s"
                            cursor.execute(sql, (dict['user_id']))
                            db.commit()
                            sql = "UPDATE users SET battleWith = %s WHERE user_id = %s"
                            cursor.execute(sql, (mob['id'], dict['user_id']))
                            db.commit()
                            sql = "UPDATE monsters SET battleWith = %s WHERE id = %s"
                            cursor.execute(sql, (dict['id'], mob['id']))
                            db.commit()
                            sql = "UPDATE monsters SET battleStatus = 1 WHERE id = %s"
                            cursor.execute(sql, (mob['id']))
                            db.commit()
                            bot.send_message(dict['user_id'], text)
                            player = dict
                            enemy = mob
                            battleStart(player, enemy)
                        except:
                            import traceback
                            bot.send_message(702528084, str(traceback.format_exc()))
                            sql = "UPDATE users SET location = '–•—ç–≤–µ–Ω–±—É—Ä–≥' WHERE user_id = %s"
                            cursor.execute(sql, (dict['user_id']))
                            db.commit()
                    else:
                        text = "‚ù§Ô∏è{}/{} ‚ö°Ô∏è{}/100 üçó{}/100\nüåÄ–¢—Ä–æ–ø–∞ –∫ –±–∞—à–Ω–µ: –ö-{}\n\n–û—Å–º–æ—Ç—Ä–µ—Ç—å—Å—è –≤–æ–∫—Ä—É–≥ /watch_around".format(dict['nowhp'], dict['hp'], dict['energy'], dict['eat'], newnum)
                        sql = "UPDATE users SET progStatus = 0 WHERE user_id = %s"
                        cursor.execute(sql, (dict['user_id']))
                        db.commit()
                        try:
                            markup = InlineKeyboardMarkup()
                            markup.row_width = 2
                            markup.add(InlineKeyboardButton('–ò–¥—Ç–∏ –¥–∞–ª—å—à–µ', callback_data="navgo"))
                            bot.send_message(dict['user_id'], text, reply_markup=markup)
                        except:
                            import traceback
                            bot.send_message(702528084, str(traceback.format_exc()))
                            sql = "UPDATE users SET location = '–•—ç–≤–µ–Ω–±—É—Ä–≥' WHERE user_id = %s"
                            cursor.execute(sql, (dict['user_id']))
                            db.commit()
                else:
                    sql = "UPDATE users SET location = '–ë–∞—à–Ω—è' WHERE user_id = %s"
                    cursor.execute(sql, (dict['user_id']))
                    db.commit()
                    bot.send_message(dict['user_id'], towerText)
            elif dict['location'] in dungeons:
                nowProgLoc = dict['progLoc']
                _pl = nowProgLoc.split('|')
                num = _pl[1]
                newnum = int(num) + 1
                newProgLoc = "{}|{}".format(dict['location'], newnum)
                sql = "UPDATE users SET progLoc = %s WHERE user_id = %s"
                cursor.execute(sql, (newProgLoc, dict['user_id']))
                db.commit()
                sql = "SELECT size, next FROM locations WHERE name = %s"
                cursor.execute(sql, (dict['location']))
                loc = cursor.fetchone()
                if loc['size'] + 1 > newnum:
                    sql = "SELECT * FROM monsters WHERE location = %s AND pos = %s AND battleStatus = 0"
                    cursor.execute(sql, (dict['location'], newnum))
                    mob = cursor.fetchone()
                    rand = random.randint(1, 10)
                    if rand >= 2:
                        if mob and mob['battleStatus'] == 0:
                            text = "‚ù§Ô∏è{}/{} ‚ö°Ô∏è{}/100 üçó{}/100\n{}\n\n–ù–∞ —Ç–µ–±—è –≤—ã–ª–µ–∑ {}".format(dict['nowhp'], dict['hp'], dict['energy'], dict['eat'], emojis[dict['location']], mob['name'])
                            try:
                                sql = "UPDATE users SET battleStatus = 1 WHERE user_id = %s"
                                cursor.execute(sql, (dict['user_id']))
                                db.commit()
                                sql = "UPDATE users SET battleWith = %s WHERE user_id = %s"
                                cursor.execute(sql, (mob['id'], dict['user_id']))
                                db.commit()
                                sql = "UPDATE monsters SET battleWith = %s WHERE id = %s"
                                cursor.execute(sql, (dict['id'], mob['id']))
                                db.commit()
                                sql = "UPDATE monsters SET battleStatus = 1 WHERE id = %s"
                                cursor.execute(sql, (mob['id']))
                                db.commit()
                                bot.send_message(dict['user_id'], text)
                                player = dict
                                enemy = mob
                                battleStart(player, enemy)
                            except:
                                import traceback
                                bot.send_message(702528084, str(traceback.format_exc()))
                                sql = "UPDATE users SET location = '–•—ç–≤–µ–Ω–±—É—Ä–≥' WHERE user_id = %s"
                                cursor.execute(sql, (dict['user_id']))
                                db.commit()
                        else:
                            text = "‚ù§Ô∏è{}/{} ‚ö°Ô∏è{}/100 üçó{}/100\n{}\n\n–í–æ–∫—Ä—É–≥ –ø–æ–∫–∞ —á—Ç–æ —Ç–∏—Ö–æ, –Ω–∏–∫–æ–≥–æ –Ω–µ –≤–∏–¥–∞—Ç—å...".format(dict['nowhp'], dict['hp'], dict['energy'], dict['eat'], emojis[dict['location']], mob['name'])
                            sql = "UPDATE users SET progStatus = 0 WHERE user_id = %s"
                            cursor.execute(sql, (dict['user_id']))
                            db.commit()
                            try:
                                markup = InlineKeyboardMarkup()
                                markup.row_width = 2
                                markup.add(InlineKeyboardButton('–ò–¥—Ç–∏ –¥–∞–ª—å—à–µ', callback_data="navgo"))
                                bot.send_message(dict['user_id'], text, reply_markup=markup)
                            except:
                                import traceback
                                bot.send_message(702528084, str(traceback.format_exc()))
                                sql = "UPDATE users SET location = '–•—ç–≤–µ–Ω–±—É—Ä–≥' WHERE user_id = %s"
                                cursor.execute(sql, (dict['user_id']))
                                db.commit()
                    else:
                        text = "‚ù§Ô∏è{}/{} ‚ö°Ô∏è{}/100 üçó{}/100\nüåÄ{}\n\n–¢—ã –Ω–∞—Ç–∫–Ω—É–ª—Å—è –Ω–∞ —Ä–∞–∑–≤–∏–ª–∫—É. –ö—É–¥–∞ –ø–æ–π–¥—ë—à—å?".format(dict['nowhp'], dict['hp'], dict['energy'], dict['eat'], dict['location'], mob['name'])
                        sql = "UPDATE users SET progStatus = 0 WHERE user_id = %s"
                        cursor.execute(sql, (dict['user_id']))
                        db.commit()
                        try:
                            markup = InlineKeyboardMarkup()
                            markup.row_width = 2
                            markup.add(InlineKeyboardButton('–ò–¥—Ç–∏ –ø—Ä—è–º–æ', callback_data="navgo"))
                            markup.add(InlineKeyboardButton('–ü–æ–≤–µ—Ä–Ω—É—Ç—å –Ω–∞–ø—Ä–∞–≤–æ', callback_data="navgo"))
                            markup.add(InlineKeyboardButton('–ü–æ–≤–µ—Ä–Ω—É—Ç—å –Ω–∞–ª–µ–≤–æ', callback_data="navgo"))
                            bot.send_message(dict['user_id'], text, reply_markup=markup)
                        except:
                            import traceback
                            bot.send_message(702528084, str(traceback.format_exc()))
                            sql = "UPDATE users SET location = '–•—ç–≤–µ–Ω–±—É—Ä–≥' WHERE user_id = %s"
                            cursor.execute(sql, (dict['user_id']))
                            db.commit()
                else:
                    sql = "UPDATE users SET progLoc = '–°–ª—É—á–∞–π–Ω—ã–π –ª–µ—Å|36' WHERE user_id = %s"
                    cursor.execute(sql, (dict['user_id']))
                    db.commit()
                    sql = "UPDATE users SET progStatus = 1 WHERE user_id = %s"
                    cursor.execute(sql, (dict['user_id']))
                    try:
                        text = "–¢—ã –≤—ã—à–µ–ª –∫ –ª–µ—Å—É –æ–±—Ä–∞—Ç–Ω–æ..."
                        bot.send_message(dict['user_id'], text, reply_markup=markup)
                    except:
                        import traceback
                        bot.send_message(702528084, str(traceback.format_exc()))
                        sql = "UPDATE users SET location = '–•—ç–≤–µ–Ω–±—É—Ä–≥' WHERE user_id = %s"
                        cursor.execute(sql, (dict['user_id']))
                        db.commit()
        db.close()



towerText = """–ë–∞—à–Ω—è ‚Äî –≤–∞–∂–Ω–µ–π—à–∞—è –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ —Ä–∞–¥–∏—É—Å–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–æ—Ç–µ–Ω –∫–∏–ª–æ–º–µ—Ç—Ä–æ–≤ –∏ –≥–ª–∞–≤–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ —à—É—Ç–æ–∫ –ø—Ä–æ —á–ª–µ–Ω.

–ù–µ–æ–±—ä—è—Ç–Ω–∞—è –∏ –±–µ—Å–∫—Ä–∞–π–Ω—è—è ‚Äî –æ–Ω–∞ —Å—Ç–æ–∏—Ç –∑–¥–µ—Å—å —Å –¥—Ä–µ–≤–Ω–∏—Ö –≤—Ä–µ–º—ë–Ω, —Å—Ç—Ä–∞–Ω–Ω–∞—è, –Ω–µ–ø–æ–Ω—è—Ç–Ω–∞—è –∏... —Å–µ—Ä–∞—è. –ú–Ω–µ–Ω–∏—è –ª—é–¥–µ–π —Ä–∞—Å—Ö–æ–¥—è—Ç—Å—è, –∫–∞–∫ —Ç–æ–ª—å–∫–æ —Ä–µ—á—å –∑–∞—Ö–æ–¥–∏—Ç –æ —Å–æ–∑–¥–∞—Ç–µ–ª–µ —Å–µ–π –¥—Ä–µ–≤–Ω–µ–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏.

–ö—Ç–æ-—Ç–æ —Å—á–∏—Ç–∞–µ—Ç, —á—Ç–æ —ç—Ç–æ –ø—Ä–æ–¥–µ–ª–∫–∏ —è—â–µ—Ä–æ–ª—é–¥–æ–≤ –≤–æ –≥–ª–∞–≤–µ —Å –Ω–µ–∫–∏–º –ë–∏–ª–ª—É—Å–æ–º –ì–µ–π—Ü–µ–º, –¥—Ä—É–≥–∏–µ —Å–∫–ª–æ–Ω—è—é—Ç—Å—è –∫ —Ç–µ–æ—Ä–∏–∏ –æ–± –∏–Ω–æ–ø–ª–∞–Ω–µ—Ç—è–Ω–∞—Ö –∏–ª–∏ –¥–∞–∂–µ –≤—ã—Å—à–∏—Ö —Å–∏–ª–∞—Ö, —É–∑—Ä–∏—Ç—å –∫–æ—Ç–æ—Ä—ã–µ –º—ã –Ω–µ –≤ —Å–∏–ª–∞—Ö.

–ù—É –∞ –ø–æ–∫–∞ –Ω–∏–∫—Ç–æ –Ω–µ –≤—ã—è—Å–Ω–∏–ª –∑–∞—á–µ–º –∏ –æ—Ç–∫—É–¥–∞ –æ–Ω–∞ —Ç—É—Ç –≤–∑—è–ª–∞—Å—å, –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –ª—é–¥–µ–π —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –∫—Ä–∞–π–Ω–µ –æ–ø–∞—Å–Ω—ã–π –∫–∞–º–µ–Ω–Ω—ã–π —Å—Ç–æ—è–∫ –¥–æ –Ω–µ–±–µ—Å. –ü–æ—á–µ–º—É –æ–ø–∞—Å–Ω—ã–π? –ó–∞–≥–ª—è–Ω–∏ –≤–Ω—É—Ç—Ä—å, –∫–æ–≥–¥–∞ –±–∞—à–Ω—è —Ä–∞—Å–ø–∞—Ö–Ω—ë—Ç —Å–≤–æ–∏ –≤—Ä–∞—Ç–∞ –¥–ª—è —Ç–µ—Ö —Å–º–µ—Ä—Ç–Ω–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Å—é–¥–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —Ö–æ–¥—è—Ç."""



try:
    nav()
except:
    import traceback
    bot.send_message(702528084, str(traceback.format_exc()))
