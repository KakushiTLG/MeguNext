gameActive = 1
def checker(m):
    user = db.Users.get(user_id=m.from_user.id)
    if user:
        user.sleepPlayer = int(time.time() + 86400)
        user.save()
        success = True
    else:
        start(m)
        success = False
    return success
antiflood = {}
activity = {}
@bot.message_handler(content_types=["text"])
def texthand(m):
    global antiflood
    global activity
    if gameActive == 0 and str(m.from_user.id) not in owner and m.chat.id == m.from_user.id:
        bot.reply_to(m, "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã. –°–∫–æ—Ä–æ –≤—Å—ë –∑–∞—Ä–∞–±–æ—Ç–∞–µ—Ç")
        return
    try:
        if antiflood[m.chat.id]:
            if antiflood[m.chat.id] > time.time():
                return
            else:
                antiflood[m.chat.id] = int(time.time()) + 2
    except:
        antiflood[m.chat.id] = int(time.time()) + 2
    if m.chat.id == m.from_user.id:
        success = checker(m)
        if success == True:
            user = db.Users.get(user_id=m.from_user.id)
            try:
                activity[m.from_user.id] += 1
                if activity[m.from_user.id] / 500 == activity[m.from_user.id] // 500:
                    bot.send_message(kakushigoto, "–ò–≥—Ä–æ–∫ {} –Ω–∞–±—Ä–∞–ª 500 –æ—á–∫–æ–≤".format(user.id))
            except:
                activity[m.from_user.id] = 1
            if user.ban == 0:
                pass
            elif user.ban == 2:
                pass
            else:
                profile(m)
                return
            if m.text.lower() in ['–ø—Ä–æ—Ñ–∏–ª—å']:
                profile(m)
            elif m.text.lower() in ['–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å']:
                inventory(m)
            elif m.text.lower() in ['–Ω–∞–≤–∏–≥–∞—Ü–∏—è']:
                navigation(m)
            elif m.text.lower() in ['—Ä–µ—Ñ–µ—Ä–∞–ª—ã']:
                refs(m)
            elif m.text.lower() in ['—Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ']:
                inventory(m)
            elif m.text.lower() in ['–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞']:
                grouppanel(m)
        else:
            return

@bot.message_handler(content_types=['new_chat_members'])
def checkfrak(m):
    user = db.Users.get(user_id=m.from_user.id)
    if m.chat.id == -1001320424099: # –•—Ä–∞–Ω–∏—Ç–µ–ª–∏
        if user and user.frak == '–•—Ä–∞–Ω–∏—Ç–µ–ª–∏':
            pass
        else:
            bot.kick_chat_member(m.chat.id, m.from_user.id)
    elif m.chat.id == -1001467052649: # –†—ã—Ü–∞—Ä–∏
        if user and user.frak == '–ù–µ–±–µ—Å–Ω—ã–µ —Ä—ã—Ü–∞—Ä–∏':
            pass
        else:
            bot.kick_chat_member(m.chat.id, m.from_user.id)
    elif m.chat.id == -1001121150202: # –ì—Ä—è–∑–Ω–æ–µ –Ω–µ–±–æ
        if user and user.frak == '–ì—Ä—è–∑–Ω–æ–µ –Ω–µ–±–æ':
            pass
        else:
            bot.kick_chat_member(m.chat.id, m.from_user.id)
    elif m.chat.id == -1001336335908: # –í–∞–≤–∏–ª–æ–Ω
        if user and user.frak == '–í–∞–≤–∏–ª–æ–Ω':
            pass
        else:
            bot.kick_chat_member(m.chat.id, m.from_user.id)
    elif m.chat.id == -1001345068459:
        user = db.Users.get(user_id=m.from_user.id)
        if user.ban != 2:
            user.money += 50
            user.ban = 2
            user.save()
            bot.send_message(user.user_id, "–í–∞–º –±—ã–ª–æ –∑–∞—á–∏—Å–ª–µ–Ω–æ 50üí∞ –∑–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É!")